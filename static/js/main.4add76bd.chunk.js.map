{"version":3,"sources":["components/VideoListItem.tsx","components/VideoList.tsx","components/SearchBar.tsx","constants/index.ts","utils/index.ts","services/index.ts","components/Player.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["VideoListItem","video","setVideo","title","id","thumbnail","url","onVidClick","useCallback","className","src","alt","loading","IconButton","onClick","color","VideoList","videos","style","height","overflow","map","v","SearchBar","onChange","onSubmit","useState","input","setInput","inputMode","setInputMode","onKeyPress","evt","charCode","target","blur","handleInputChange","value","handleClear","handleBack","handleSearch","AppBar","position","Toolbar","edge","Input","placeholder","fullWidth","endAdornment","InputAdornment","aria-label","Typography","flex","URL","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","zeroPad","num","places","String","padStart","formatTime","time","Math","floor","api","cache","this","videoId","cachedInfo","fetch","res","json","data","lengthSeconds","parseInt","Audio","searchTerm","formatSearchTearm","split","join","result","Player","setLoading","playing","setPlaying","currentTime","setCurrentTime","videoDetails","setVideoDetails","audioRef","useRef","fetchAudio","a","current","pause","audio","getAudio","addEventListener","round","getInfo","info","useEffect","download","document","createElement","href","click","playOrPause","play","onSliderChange","_","val","bottom","width","LinearProgress","background","display","flexDirection","boxShadow","alignItems","margin","marginRight","Slider","max","min","marginLeft","justifyContent","textOverflow","variant","noWrap","author","App","setVideos","setVideoId","setSearchTerm","onSearchTermChange","txt","onSearch","search","console","log","fetchData","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0UAuCeA,EA5BO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SACpBC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACTC,EAAYJ,EAAMI,UAAUC,IAC5BC,EAAaC,uBAAY,WAC3BN,EAASD,KACV,CAACA,EAAOC,IACX,OACI,sBAAKO,UAAU,4BAAf,UACI,qBACIC,IAAKL,EACLM,IAAI,YACJC,QAAQ,SAEZ,sBAAKH,UAAU,UAAf,UACA,qBAAKA,UAAU,QAAf,SACKN,IAEL,qBAAKM,UAAU,WAAf,SACKL,OAGL,cAACS,EAAA,EAAD,CAAYC,QAASP,EAAYQ,MAAM,YAAvC,SACI,cAAC,IAAD,UCjBDC,EAPG,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,OAAQf,EAAqB,EAArBA,SACxB,OAAQ,sBAAKgB,MAAO,CAACC,OAAQ,OAAQC,SAAU,QAAvC,UACHH,GAAUA,EAAOI,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAerB,MAAOqB,EAAcpB,SAAUA,GAAhBoB,EAAElB,OAC3D,qBAAKc,MAAO,CAACC,OAAQ,W,4FC8DdI,G,MA9DG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAsB,EACvBC,mBAAiB,IADM,mBAC1CC,EAD0C,KACnCC,EADmC,OAEfF,oBAAkB,GAFH,mBAE1CG,EAF0C,KAE/BC,EAF+B,KAI3CC,EAAavB,uBAAY,SAAAwB,GACN,KAAjBA,EAAIC,WACJR,IACAO,EAAIE,OAAOC,UAEhB,CAACV,IAEEW,EAAoB5B,uBAAY,SAAAwB,GAClCJ,EAASI,EAAIE,OAAOG,OACpBb,EAASQ,KACV,CAACR,IAEEc,EAAc9B,uBAAY,WAC5BoB,EAAS,MACV,IAEGW,EAAa/B,uBAAY,WAC3BsB,GAAa,KACd,IAEGU,EAAehC,uBAAY,WAC7BsB,GAAa,KACd,IACH,OACQ,cAACW,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACKb,EACD,eAACc,EAAA,EAAD,WACI,cAAC9B,EAAA,EAAD,CAAYE,MAAM,YAAY6B,KAAK,QAAQ9B,QAASyB,EAApD,SACI,cAAC,IAAD,MAEJ,cAACM,EAAA,EAAD,CACI9B,MAAM,YACNG,MAAO,CAACH,MAAO,SACf+B,YAAY,SACZT,MAAOV,EACPH,SAAUY,EACVL,WAAYA,EACZgB,WAAS,EACTC,aACI,cAACC,EAAA,EAAD,CAAgBP,SAAS,MAAzB,SACI,cAAC7B,EAAA,EAAD,CACAqC,aAAW,cACXnC,MAAM,YACND,QAASwB,EAHT,SAII,cAAC,IAAD,aAKpB,eAACK,EAAA,EAAD,WACI,cAACQ,EAAA,EAAD,CAAYjC,MAAO,CAACkC,KAAM,GAA1B,wBACA,cAACvC,EAAA,EAAD,CAAYE,MAAM,YAAYD,QAAS0B,EAAvC,SACI,cAAC,IAAD,a,gBClEXa,EAAM,sDAENC,EAAQC,YAAe,CAChCC,QAAS,CACLC,QAAS,CACLC,MAAO,UACPC,KAAM,OACNC,KAAM,UACNC,aAAc,WAElBC,UAAW,CACPJ,MAAO,OACPC,KAAM,UACNC,KAAM,OACNC,aAAc,W,iBChBbE,EAAU,SAACC,EAAaC,GAAd,OAAiCC,OAAOF,GAAKG,SAASF,EAAQ,MAExEG,EAAa,SAACC,GACvB,MAAM,GAAN,OAAUN,EAAQO,KAAKC,MAAMF,EAAK,IAAK,GAAvC,YAA6CN,EAAQM,EAAK,GAAI,K,gBC+BrDG,EAAM,I,WA5Bf,WAAYlE,GAAc,yBAFlBA,SAEiB,OADjBmE,WACiB,EACrBC,KAAKpE,IAAMA,EACXoE,KAAKD,MAAQ,G,kFAEjB,WAAsBE,GAAtB,gFACUC,EAAaF,KAAKD,MAAME,IADlC,yCAGeC,GAHf,uBAKsBC,MAAM,GAAD,OAAIH,KAAKpE,IAAT,iBAAqBqE,IALhD,cAKUG,EALV,gBAMuBA,EAAIC,OAN3B,cAMUC,EANV,QAOSC,cAAgBC,SAASF,EAAKC,eACnCP,KAAKD,MAAME,GAAWK,EAR1B,kBASWA,GATX,iD,6EAWA,SAAiBL,GACb,IAAMjE,EAAG,UAAMgE,KAAKpE,IAAX,mBAAyBqE,GAElC,OADc,IAAIQ,MAAMzE,K,2DAG5B,WAAqB0E,GAArB,kFACUC,EAAoBD,EAAWE,MAAM,KAAKC,KAAK,KADzD,SAEsBV,MAAM,UAAGxB,EAAH,YAAmBgC,GAF/C,cAEUP,EAFV,gBAGyBA,EAAIC,OAH7B,cAGUS,EAHV,yBAIWA,GAJX,2C,8DAQe,CAAQnC,G,mDC8DZoC,EAhFA,SAAC,GAAsB,IAArBd,EAAoB,EAApBA,QAAoB,EACHjD,oBAAkB,GADf,mBAC1Bd,EAD0B,KACjB8E,EADiB,OAEHhE,oBAAkB,GAFf,mBAE1BiE,EAF0B,KAEjBC,EAFiB,OAGKlE,mBAAiB,GAHtB,mBAG1BmE,EAH0B,KAGbC,EAHa,OAIOpE,mBAA8B,MAJrC,mBAI1BqE,EAJ0B,KAIZC,EAJY,KAK3BC,EAAWC,iBAAgC,MAC3CC,EAAa3F,sBAAW,sBAAC,8BAAA4F,EAAA,0DACvBzB,EADuB,wBAEvBe,GAAW,GACPO,EAASI,UACTJ,EAASI,QAAQC,QACjBL,EAASI,QAAQR,YAAc,IAE7BU,EAAQ/B,EAAIgC,SAAS7B,IACrB8B,iBAAiB,cAAc,WACjCX,EAAexB,KAAKoC,MAAMH,EAAMV,iBAEpCU,EAAME,iBAAiB,SAAS,WAC5Bb,GAAW,MAEfK,EAASI,QAAUE,EAdI,SAeJ/B,EAAImC,QAAQhC,GAfR,OAejBiC,EAfiB,OAgBvBhB,GAAW,GACXI,EAAgBY,EAAKb,cACrBL,GAAW,GAlBY,4CAoB5B,CAACf,IACJkC,qBAAU,WACNV,MACD,CAACA,IACJ,IAAMW,EAAWtG,uBAAY,WACzB,IAAM4F,EAAIW,SAASC,cAAc,KACjCZ,EAAEa,KAAF,UAAY5D,EAAZ,qBAA4BsB,GAC5ByB,EAAElE,OAAS,SACXkE,EAAEc,UACH,CAACvC,IACEwC,EAAc3G,uBAAY,WACxByF,EAASI,UACLV,EACAM,EAASI,QAAQC,QAEjBL,EAASI,QAAQe,OAErBxB,GAAYD,MAEjB,CAACA,IAGE0B,EAAiB7G,uBAAY,SAAC8G,EAAGC,GAC/BtB,EAASI,UACTJ,EAASI,QAAQR,YAAc0B,KAEpC,IACH,OACI,qBAAKrG,MAAO,CAACwB,SAAU,QAAS8E,OAAQ,EAAGC,MAAO,QAAlD,SACC7G,EAAU,cAAC8G,EAAA,EAAD,IAAqB3B,GAC5B,sBAAK7E,MAAO,CAACuG,MAAO,OAAQE,WAAY,OAAQ5G,MAAO,OAAQ6G,QAAS,OAAQC,cAAe,SAAUC,UAAW,+BAApH,UACI,sBAAK5G,MAAO,CAAC0G,QAAS,OAAQC,cAAe,MAAOE,WAAY,UAAhE,UACI,sBAAM7G,MAAO,CAAC8G,OAAQ,EAAGC,YAAa,IAAtC,SAA4C7D,EAAWyB,KACvD,cAACqC,EAAA,EAAD,CAAQnH,MAAM,YAAYS,SAAU6F,EAAgBc,IAAKpC,EAAad,cAAemD,IAAK,EAAG/F,MAAOwD,IACpG,sBAAM3E,MAAO,CAAC8G,OAAQ,EAAGK,WAAY,IAArC,SAA2CjE,EAAW2B,EAAad,oBAEvE,sBAAK/D,MAAO,CAAC0G,QAAS,OAAQC,cAAe,MAAOE,WAAY,UAAhE,UACI,cAAClH,EAAA,EAAD,CAAYC,QAASqG,EAAapG,MAAM,YAAxC,SACK4E,EAAU,cAAC,IAAD,IAAe,cAAC,IAAD,MAE9B,cAAC9E,EAAA,EAAD,CAAYC,QAASgG,EAAU/F,MAAM,YAArC,SACI,cAAC,IAAD,MAEJ,sBAAKG,MAAO,CAAC0G,QAAS,OAAQC,cAAe,SAAUS,eAAgB,SAAUD,WAAY,EAAGjH,SAAU,SAAUmH,aAAc,YAAlI,UACA,cAACpF,EAAA,EAAD,CAAYqF,QAAQ,YAAYC,QAAM,EAAtC,SAAwC1C,EAAa5F,QACjD,cAACgD,EAAA,EAAD,CAAYqF,QAAQ,YAAYzH,MAAM,gBAAgB0H,QAAM,EAA5D,SAA8D1C,EAAa2C,qB,QCtCpFC,MAvCf,WAAgB,IAAD,EACejH,mBAAuB,IADtC,mBACNT,EADM,KACE2H,EADF,OAEiBlH,mBAAiB,IAFlC,mBAENiD,EAFM,KAEGkE,EAFH,OAGiBnH,oBAAkB,GAHnC,mBAGNd,EAHM,KAGG8E,EAHH,OAIuBhE,mBAAiB,IAJxC,mBAIN0D,EAJM,KAIM0D,EAJN,KAMPC,EAAqBvI,uBAAY,SAACwB,GACtC,IAAMgH,EAAMhH,EAAIE,OAAOG,MACvByG,EAAcE,KACb,IAEGC,EAAWzI,uBAAY,YACZ,uCAAG,4BAAA4F,EAAA,sEAEdV,GAAW,GAFG,SAGOlB,EAAI0E,OAAO9D,GAHlB,OAGRI,EAHQ,OAIdoD,EAAUpD,GACVE,GAAW,GALG,gDAOdyD,QAAQC,IAAR,MAPc,yDAAH,qDAUfC,KACC,CAACjE,IAEElF,EAAWM,uBAAY,SAACP,GAC5B4I,EAAW5I,EAAMG,MAChB,IACH,OACE,cAACkJ,EAAA,EAAD,CAAehG,MAAOA,EAAtB,SACA,sBAAK7C,UAAU,aAAaS,MAAO,CAACC,OAAQ,QAASC,SAAU,UAA/D,UACA,cAAC,EAAD,CAAWI,SAAUuH,EAAoBtH,SAAUwH,IAClDrI,EAAU,cAAC8G,EAAA,EAAD,IAAqB,cAAC,EAAD,CAAWzG,OAAQA,EAAQf,SAAUA,IACrE,cAAC,EAAD,CAAQyE,QAASA,UC/BN4E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnD,SAASoD,eAAe,SAM1BZ,M","file":"static/js/main.4add76bd.chunk.js","sourcesContent":["import React, { useCallback } from 'react'\r\nimport {Video} from '../types'\r\nimport {IconButton} from '@material-ui/core'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline'\r\nimport './VideoListItem.css'\r\n\r\ninterface Props {\r\n    video: Video;\r\n    setVideo: (video: Video) => void;\r\n}\r\n\r\nconst VideoListItem = ({ video, setVideo }: Props) => {\r\n    const { title, id } = video\r\n    const thumbnail = video.thumbnail.url\r\n    const onVidClick = useCallback(() => {\r\n        setVideo(video)\r\n    }, [video, setVideo])\r\n    return (\r\n        <div className='video-list-item-container'>\r\n            <img\r\n                src={thumbnail}\r\n                alt='thumbnail'\r\n                loading='lazy'\r\n            />\r\n            <div className='content'>\r\n            <div className='title'>\r\n                {title}\r\n            </div>\r\n            <div className=\"subtitle\">\r\n                {id}\r\n            </div>\r\n            </div>\r\n            <IconButton onClick={onVidClick} color='secondary'>\r\n                <PlayCircleOutlineIcon/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoListItem","import React from 'react'\r\nimport VideoListItem from './VideoListItem'\r\nimport {Video} from '../types'\r\n\r\ninterface Props{\r\n    videos: Array<Video>;\r\n    setVideo: (video: Video) => void;\r\n}\r\n\r\nconst VideoList = ({videos, setVideo}: Props) => {\r\n    return (<div style={{height: '100%', overflow: 'auto'}}>\r\n        {videos && videos.map(v => <VideoListItem video={v} key={v.id} setVideo={setVideo}/>)}\r\n        <div style={{height: 200}}/>\r\n        </div>)\r\n}\r\n\r\nexport default VideoList","import React, { useCallback, useState } from 'react'\r\nimport { Input, AppBar, Toolbar, InputAdornment, IconButton, Typography } from '@material-ui/core'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport './SearchBar.css'\r\n\r\ninterface Props{\r\n    onChange: (evt: any) => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nconst SearchBar = ({ onChange, onSubmit }: Props) => {\r\n    const [input, setInput] = useState<string>('')\r\n    const [inputMode, setInputMode] = useState<boolean>(false)\r\n\r\n    const onKeyPress = useCallback(evt => {\r\n        if (evt.charCode === 13) {\r\n            onSubmit()\r\n            evt.target.blur()\r\n        }\r\n    }, [onSubmit])\r\n\r\n    const handleInputChange = useCallback(evt => {\r\n        setInput(evt.target.value)\r\n        onChange(evt)\r\n    }, [onChange])\r\n\r\n    const handleClear = useCallback(() => {\r\n        setInput('')\r\n    }, [])\r\n\r\n    const handleBack = useCallback(() => {\r\n        setInputMode(false)\r\n    }, [])\r\n\r\n    const handleSearch = useCallback(() => {\r\n        setInputMode(true)\r\n    }, [])\r\n    return (\r\n            <AppBar position='static'>\r\n                {inputMode ?\r\n                <Toolbar>\r\n                    <IconButton color='secondary' edge=\"start\" onClick={handleBack}>\r\n                        <ArrowBackIosIcon/>\r\n                    </IconButton>\r\n                    <Input\r\n                        color='secondary'\r\n                        style={{color: 'white'}}\r\n                        placeholder=\"Search\"\r\n                        value={input}\r\n                        onChange={handleInputChange}\r\n                        onKeyPress={onKeyPress}\r\n                        fullWidth\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                aria-label=\"clear input\"\r\n                                color='secondary'\r\n                                onClick={handleClear}>\r\n                                    <ClearIcon/>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }/>\r\n                </Toolbar> : \r\n                <Toolbar>\r\n                    <Typography style={{flex: 1}}>ListenTube</Typography>\r\n                    <IconButton color='secondary' onClick={handleSearch}>\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                </Toolbar>}\r\n            </AppBar>)\r\n}\r\n\r\nexport default SearchBar","import {createMuiTheme} from '@material-ui/core'\r\n\r\nexport const URL = 'https://main-youtube-shd6uy5b29ceuriw-gtw.qovery.io'\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#303030',\r\n            main: '#000',\r\n            dark: '#303030',\r\n            contrastText: '#ffa600',\r\n        },\r\n        secondary: {\r\n            light: '#fff',\r\n            main: '#ffa600',\r\n            dark: '#fff',\r\n            contrastText: '#fff',\r\n        }\r\n    }\r\n})","export const zeroPad = (num: number, places: number) => String(num).padStart(places, '0')\r\n\r\nexport const formatTime = (time: number) => {\r\n    return `${zeroPad(Math.floor(time/60), 2)}:${zeroPad(time%60, 2)}`\r\n}","import {URL} from '../constants'\r\nimport {Video, VideoCache, VideoInfo} from '../types'\r\n\r\nclass API {\r\n    private url: string\r\n    private cache: VideoCache\r\n    constructor(url: string) {\r\n        this.url = url\r\n        this.cache = {}\r\n    }\r\n    public async getInfo (videoId: string): Promise<VideoInfo> {\r\n        const cachedInfo = this.cache[videoId]\r\n        if (cachedInfo) {\r\n            return cachedInfo\r\n        }\r\n        const res = await fetch(`${this.url}/info/${videoId}`)\r\n        const data = await res.json()\r\n        data.lengthSeconds = parseInt(data.lengthSeconds)\r\n        this.cache[videoId] = data\r\n        return data\r\n    }\r\n    public getAudio (videoId: string): HTMLAudioElement {\r\n        const src = `${this.url}/stream/${videoId}`\r\n        const audio = new Audio(src)\r\n        return audio\r\n    }\r\n    public async search (searchTerm: string): Promise<Array<Video>> {\r\n        const formatSearchTearm = searchTerm.split(' ').join('+')\r\n        const res = await fetch(`${URL}/search/` + formatSearchTearm)\r\n        const result = await res.json()\r\n        return result\r\n    }\r\n}\r\n\r\nexport const api = new API(URL)","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport 'react-h5-audio-player/lib/styles.css'\r\nimport {URL} from '../constants'\r\nimport {Slider, IconButton, Typography, LinearProgress} from '@material-ui/core'\r\nimport {formatTime} from '../utils'\r\nimport {api} from '../services'\r\nimport {VideoDetails} from '../types'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\r\nimport PauseIcon from '@material-ui/icons/Pause'\r\nimport DownloadIcon from '@material-ui/icons/GetApp';\r\n\r\n\r\ninterface Props{\r\n    videoId: string;\r\n}\r\n\r\nconst Player = ({videoId}: Props) => {\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [playing, setPlaying] = useState<boolean>(false)\r\n    const [currentTime, setCurrentTime] = useState<number>(0)\r\n    const [videoDetails, setVideoDetails] = useState<VideoDetails | null>(null)\r\n    const audioRef = useRef<HTMLAudioElement | null>(null)\r\n    const fetchAudio = useCallback(async () => {\r\n        if (videoId) {\r\n            setLoading(true)\r\n            if (audioRef.current) {\r\n                audioRef.current.pause()\r\n                audioRef.current.currentTime = 0\r\n            }\r\n            const audio = api.getAudio(videoId)\r\n            audio.addEventListener('timeupdate', () => {\r\n                setCurrentTime(Math.round(audio.currentTime))\r\n            })\r\n            audio.addEventListener('ended', () => {\r\n                setPlaying(false)\r\n            })\r\n            audioRef.current = audio\r\n            const info = await api.getInfo(videoId)\r\n            setPlaying(false)\r\n            setVideoDetails(info.videoDetails)\r\n            setLoading(false)\r\n        }\r\n    }, [videoId])\r\n    useEffect(() => {\r\n        fetchAudio()\r\n    }, [fetchAudio])\r\n    const download = useCallback(() => {\r\n        const a = document.createElement('a')\r\n        a.href = `${URL}/download/${videoId}`\r\n        a.target = '_blank'\r\n        a.click()\r\n    }, [videoId])\r\n    const playOrPause = useCallback(() => {\r\n        if (audioRef.current) {\r\n            if (playing) {\r\n                audioRef.current.pause()\r\n            } else {\r\n                audioRef.current.play()\r\n            }\r\n            setPlaying(!playing)\r\n        }\r\n    }, [playing])\r\n    \r\n    \r\n    const onSliderChange = useCallback((_, val) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.currentTime = val\r\n        }\r\n    }, [])\r\n    return (\r\n        <div style={{position: 'fixed', bottom: 0, width: '100%'}}>\r\n        {loading ? <LinearProgress/> : (videoDetails &&\r\n            <div style={{width: '100%', background: '#000', color: '#fff', display: 'flex', flexDirection: 'column', boxShadow: '0px 0px 4px rgba(0,0,0,0.5)'}}>\r\n                <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                    <span style={{margin: 5, marginRight: 15}}>{formatTime(currentTime)}</span>\r\n                    <Slider color='secondary' onChange={onSliderChange} max={videoDetails.lengthSeconds} min={0} value={currentTime}/>\r\n                    <span style={{margin: 5, marginLeft: 15}}>{formatTime(videoDetails.lengthSeconds)}</span>\r\n                </div>\r\n                <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                    <IconButton onClick={playOrPause} color='secondary'>\r\n                        {playing ? <PauseIcon/> : <PlayArrowIcon/>}\r\n                    </IconButton>\r\n                    <IconButton onClick={download} color='secondary'>\r\n                        <DownloadIcon/>\r\n                    </IconButton>\r\n                    <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', marginLeft: 5, overflow: \"hidden\", textOverflow: \"ellipsis\"}}>\r\n                    <Typography variant=\"subtitle1\" noWrap>{videoDetails.title}</Typography>\r\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\" noWrap>{videoDetails.author}</Typography>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player","import './App.css';\r\nimport {useState, useCallback} from 'react'\r\nimport VideoList from './components/VideoList'\r\nimport SearchBar from './components/SearchBar'\r\nimport Player from './components/Player'\r\nimport {theme} from './constants'\r\nimport {api} from './services'\r\nimport {LinearProgress, ThemeProvider} from '@material-ui/core'\r\nimport { Video } from './types';\r\n\r\nfunction App() {\r\n  const [videos, setVideos] = useState<Array<Video>>([])\r\n  const [videoId, setVideoId] = useState<string>('')\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [searchTerm, setSearchTerm] = useState<string>('')\r\n\r\n  const onSearchTermChange = useCallback((evt) => {\r\n    const txt = evt.target.value\r\n    setSearchTerm(txt)\r\n  }, [])\r\n\r\n  const onSearch = useCallback(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const result = await api.search(searchTerm)\r\n        setVideos(result)\r\n        setLoading(false)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [searchTerm])\r\n\r\n  const setVideo = useCallback((video: Video) => {\r\n    setVideoId(video.id)\r\n  }, [])\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <div className='background' style={{height: '100vh', overflow: 'hidden'}}>\r\n    <SearchBar onChange={onSearchTermChange} onSubmit={onSearch}/>\r\n    {loading ? <LinearProgress /> : <VideoList videos={videos} setVideo={setVideo}/>}\r\n    <Player videoId={videoId}/>\r\n    </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}