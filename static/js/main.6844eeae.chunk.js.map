{"version":3,"sources":["components/VideoListItem.js","components/VideoList.js","components/SearchBar.js","components/Player.js","constants/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","margin","marginTop","content","flex","cover","width","minWidth","VideoListItem","video","setVideo","title","url","classes","thumbnail","onVidClick","useCallback","Card","className","onClick","CardMedia","image","CardContent","Typography","component","variant","color","VideoList","videos","style","height","overflow","map","v","SearchBar","onChange","onSubmit","onKeyPress","evt","charCode","target","blur","AppBar","position","Toolbar","TextField","label","fullWidth","Player","src","bottom","URL","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","useState","setVideos","videoUrl","setVideoUrl","loading","setLoading","searchTerm","setSearchTerm","onSearchTermChange","txt","value","onSearch","a","formatSearchTearm","split","join","fetch","then","res","json","result","console","log","fetchData","substr","ThemeProvider","LinearProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6844eeae.chunk.js","sourcesContent":["import React, { useCallback } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Card, CardContent, Typography, CardMedia } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        margin: 5,\r\n        marginTop: 20\r\n    },\r\n    content: {\r\n        flex: 1\r\n    },\r\n    cover: {\r\n        width: 150,\r\n        minWidth: 150\r\n    }\r\n}))\r\n\r\nconst VideoListItem = ({ video, setVideo }) => {\r\n    const { title, url } = video\r\n    const classes = useStyles()\r\n    const thumbnail = video.thumbnail.url\r\n    const onVidClick = useCallback(() => {\r\n        setVideo(video)\r\n    }, [video, setVideo])\r\n    return (\r\n        <Card className={classes.root} onClick={onVidClick}>\r\n            <CardMedia\r\n                className={classes.cover}\r\n                image={thumbnail}\r\n                title={title}\r\n            />\r\n            <CardContent className={classes.content}>\r\n                <Typography component=\"h5\" variant=\"h5\">\r\n                    {title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    {url}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default VideoListItem","import React from 'react'\r\nimport VideoListItem from './VideoListItem'\r\n\r\nconst VideoList = ({videos, setVideo}) => {\r\n    return (<div style={{height: '100%', overflow: 'auto'}}>\r\n        {videos && videos.map(v => <VideoListItem video={v} key={v.url} setVideo={setVideo}/>)}\r\n        <div style={{height: 200}}/>\r\n        </div>)\r\n}\r\n\r\nexport default VideoList","import React, { useCallback } from 'react'\r\nimport { TextField, AppBar, Toolbar } from '@material-ui/core'\r\n\r\n\r\nconst SearchBar = ({ onChange, onSubmit }) => {\r\n    const onKeyPress = useCallback(evt => {\r\n        if (evt.charCode === 13) {\r\n            onSubmit()\r\n            evt.target.blur()\r\n        }\r\n    }, [onSubmit])\r\n    return (\r\n            <AppBar position='static'>\r\n                <Toolbar>\r\n                    <TextField\r\n                    color='secondary'\r\n                    label=\"Search\" variant=\"standard\" onChange={onChange} onKeyPress={onKeyPress} fullWidth />\r\n                </Toolbar>\r\n            </AppBar>)\r\n}\r\n\r\nexport default SearchBar","import React from 'react'\r\nimport AudioPlayer from 'react-h5-audio-player'\r\nimport 'react-h5-audio-player/lib/styles.css'\r\n\r\nconst Player = ({src}) => {\r\n    return (\r\n        <AudioPlayer\r\n        src={src}\r\n        style={{position: 'fixed', bottom: 0, width: '100%'}}/>\r\n    )\r\n}\r\n\r\nexport default Player","import {createMuiTheme} from '@material-ui/core'\r\n\r\nexport const URL = 'https://main-youtube-shd6uy5b29ceuriw-gtw.qovery.io'\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#757ce8',\r\n            main: '#50b1de',\r\n            dark: '#002884',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#757ce8',\r\n            main: '#000',\r\n            dark: '#002884',\r\n            contrastText: '#fff',\r\n        }\r\n    }\r\n})","import './App.css';\r\nimport {useState, useCallback} from 'react'\r\nimport VideoList from './components/VideoList'\r\nimport SearchBar from './components/SearchBar'\r\nimport Player from './components/Player'\r\nimport {URL, theme} from './constants'\r\nimport {LinearProgress, ThemeProvider} from '@material-ui/core'\r\n\r\nfunction App() {\r\n  const [videos, setVideos] = useState([])\r\n  const [videoUrl, setVideoUrl] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n\r\n  const onSearchTermChange = useCallback((evt) => {\r\n    const txt = evt.target.value\r\n    setSearchTerm(txt)\r\n  }, [])\r\n\r\n  const onSearch = useCallback(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const formatSearchTearm = searchTerm.split(' ').join('+')\r\n        setLoading(true)\r\n        const result = await fetch(`${URL}/search/` + formatSearchTearm).then(res => res.json())\r\n        setVideos(result)\r\n        setLoading(false)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [searchTerm])\r\n\r\n  const setVideo = useCallback(video => {\r\n    const url = `${URL}/`+video.url.substr(12)\r\n    setVideoUrl(url)\r\n  }, [])\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <div style={{height: '100vh', overflow: 'hidden'}}>\r\n    <SearchBar onChange={onSearchTermChange} onSubmit={onSearch}/>\r\n    {loading ? <LinearProgress /> : <VideoList videos={videos} setVideo={setVideo}/>}\r\n    <Player src={videoUrl}/>\r\n    </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}