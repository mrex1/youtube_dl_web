{"version":3,"sources":["utils/index.ts","constants/index.ts","services/index.ts","components/VideoListItem.tsx","components/VideoList.tsx","components/SearchBar.tsx","components/Player.tsx","components/PlaylistItem.tsx","components/PlaylistRenderer.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["zeroPad","num","places","String","padStart","durationToSeconds","duration","numbers","split","result","base","i","length","parseInt","isSuggestVideo","obj","thumbnail","URL","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","api","url","cache","suggestionsCache","this","videoId","a","document","createElement","href","target","fetch","res","json","forEach","v","id","searchTerm","formatSearchTearm","encodeURIComponent","replace","items","type","continuation","method","headers","body","JSON","stringify","playlist","videoIds","current","add","bind","next","indexOf","push","map","getInfo","vid","newCur","suggest","suggestion","suggestions","audioManager","audio","Audio","updateAudio","getAudioURL","src","VideoListItem","video","setVideo","title","bestThumbnail","onVidClick","useCallback","className","alt","loading","getYoutubeLink","rel","IconButton","onClick","color","VideoList","videos","spaceBottom","loadVideos","useState","setLoading","onScroll","e","d","currentTarget","scrollHeight","offsetHeight","scrollTop","then","LinearProgress","style","height","SearchBar","onChange","onSubmit","input","setInput","inputMode","setInputMode","onKeyPress","evt","charCode","blur","handleInputChange","value","handleClear","handleBack","handleSearch","AppBar","position","Toolbar","edge","Input","placeholder","fullWidth","endAdornment","InputAdornment","aria-label","Typography","flex","Player","videoDetails","onVideoEnd","onVideoStart","autoplay","setAutoplay","playing","setPlaying","curVId","setCurVId","currentTime","setCurrentTime","useEffect","ontimeupdate","Math","ceil","onpause","onloadeddata","onloadstart","onplay","onended","setupForNewVideo","play","catch","console","log","time","download","getAudioDownloadLink","click","playOrPause","pause","onSliderChange","_","val","handleAutoplayBtn","margin","marginRight","floor","Slider","max","min","marginLeft","padding","CircularProgress","size","Tooltip","variant","noWrap","author","name","PlaylistItem","thumbnailUrl","clsx","PlaylistRenderer","playlistVideos","currentIndex","playVideo","onAdd","on","setOn","setSuggestions","currentVId","setCurrentVId","toggleExpand","getSuggestions","open","info","component","paddingTop","paddingBottom","App","setVideos","end","setEnd","setPlaylistVideos","setContinuation","setCurrent","setSearchTerm","onSearchTermChange","txt","onSearch","search","filter","fetchData","setCurByVid","undefined","updateCurrent","loadMoreSearchResult","searchContinue","newVideos","concat","ThemeProvider","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wVAEaA,G,MAAU,SAACC,EAAaC,GAAd,OAAiCC,OAAOF,GAAKG,SAASF,EAAQ,OAOxEG,EAAoB,SAACC,GAC9B,GAAiB,OAAbA,EACA,OAAO,EAKX,IAHA,IAAMC,EAAUD,EAASE,MAAM,KAC3BC,EAAiB,EACjBC,EAAO,EACFC,EAAI,EAAIA,EAAIJ,EAAQK,OAASD,IAClCF,GAAUI,SAASN,EAAQA,EAAQK,OAAS,EAAID,IAAID,EACpDA,GAAQ,GAEZ,OAAOD,GAGEK,EAAiB,SAACC,GAC3B,OAAOA,EAAIC,W,yCCtBFC,EAAM,kCAENC,EAAQC,YAAe,CAChCC,QAAS,CACLC,QAAS,CACLC,MAAO,UACPC,KAAM,OACNC,KAAM,UACNC,aAAc,WAElBC,UAAW,CACPJ,MAAO,OACPC,KAAM,UACNC,KAAM,OACNC,aAAc,WCmEbE,EAAM,I,WA3Ef,WAAYC,GAAc,yBAHlBA,SAGiB,OAFjBC,WAEiB,OADjBC,sBACiB,EACrBC,KAAKH,IAAMA,EACXG,KAAKF,MAAQ,GACbE,KAAKD,iBAAmB,G,kDAE5B,SAAsBE,GAClB,MAAM,oBAAN,OAA2BA,K,qBAE/B,SAAeA,GACX,OAAOD,KAAKF,MAAMG,K,yBAEtB,SAAmBA,GACf,MAAM,GAAN,OAAUD,KAAKH,IAAf,0BAAoCI,K,kCAExC,SAA4BA,GACxB,IAAMC,EAAIC,SAASC,cAAc,KAGjC,OAFAF,EAAEG,KAAF,UAAYL,KAAKH,IAAjB,yBAAqCI,GACrCC,EAAEI,OAAS,SACJJ,I,4DAEX,WAAqBD,GAArB,qFACQA,KAAWD,KAAKD,kBADxB,yCAEeC,KAAKD,iBAAiBE,IAFrC,gCAK0BM,MAAM,GAAD,OAAIrB,EAAJ,wBAAuBe,IALtD,cAKcO,EALd,gBAM6CA,EAAIC,OANjD,cAMc/B,EANd,QAOegC,SAAQ,SAAAC,GACLA,EAAEC,MAAM,EAAKd,QACf,EAAKA,MAAMa,EAAEC,IAAMD,MAG3BX,KAAKD,iBAAiBE,GAAWvB,EAZzC,kBAaeA,GAbf,2DAee,MAff,0D,kHAkBA,WAAoBmC,GAApB,yFACUC,EAAoBC,mBAAmBF,EAAWG,QAAQ,IAAK,MADzE,kBAG0BT,MAAM,GAAD,OAAIrB,EAAJ,qBAAoB4B,IAHnD,cAGcN,EAHd,gBAI2CA,EAAIC,OAJ/C,cAIc/B,EAJd,QAKeuC,MAAMP,SAAQ,SAAA9B,GACF,UAAXA,EAAEsC,OACF,EAAKpB,MAAMlB,EAAEgC,IAAMhC,MAPnC,kBAUeF,GAVf,2DAYe,MAZf,0D,0HAeA,WAA4ByC,GAA5B,yGAE0BZ,MAAM,GAAD,OAAIrB,EAAJ,WAAkB,CACrCkC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUL,KAPjC,cAEcX,EAFd,gBAS2CA,EAAIC,OAT/C,cASc/B,EATd,QAUeuC,MAAMP,SAAQ,SAAA9B,GACF,UAAXA,EAAEsC,OACF,EAAKpB,MAAMlB,EAAEgC,IAAMhC,MAZnC,kBAeeF,GAff,2DAiBe,MAjBf,0D,8DAsBe,CAAQQ,GAoDduC,EAAW,IAlDxB,WAII,WAAY7B,EAAU8B,GAA2B,yBAHzCA,cAGwC,OAFzCC,aAEyC,OADxC/B,SACwC,EAC5CI,KAAK0B,SAAWA,GAAsB,GACtC1B,KAAK2B,SAAW,EAChB3B,KAAKJ,IAAMA,EACXI,KAAK4B,IAAM5B,KAAK4B,IAAIC,KAAK7B,MACzBA,KAAK8B,KAAO9B,KAAK8B,KAAKD,KAAK7B,MATnC,uCAWI,SAAIC,IACwC,IAApCD,KAAK0B,SAASK,QAAQ9B,IACtBD,KAAK0B,SAASM,KAAK/B,KAb/B,0BAgBI,WAAmD,IAAD,OAC9C,OAAOD,KAAK0B,SAASO,KAAI,SAAArB,GAAE,OAAI,EAAKhB,IAAIsC,QAAQtB,QAjBxD,yBAmBI,SAAYuB,GACR,IAAMC,EAASpC,KAAK0B,SAASK,QAAQI,GACrC,IAAgB,IAAZC,EAEA,OADApC,KAAK2B,QAAUS,EACRpC,KAAK2B,UAvBxB,yDA0BI,4BAAAzB,EAAA,2DACQF,KAAK2B,QAAU3B,KAAK0B,SAAS7C,OAAS,GAD9C,uBAEQmB,KAAK2B,SAAW,EAFxB,kBAGe3B,KAAK2B,SAHpB,uBAK6B3B,KAAKqC,QAAQrC,KAAK0B,SAAS1B,KAAK2B,UAL7D,YAKUW,EALV,gCAOQtC,KAAK4B,IAAIU,GAPjB,UAQqBtC,KAAK8B,OAR1B,0FA1BJ,kHAsCI,WAAsB7B,GAAtB,6FAC8BD,KAAKJ,IAAIyC,QAAQpC,GAD/C,YACUsC,EADV,uCAG+BA,GAH/B,4DAGiBD,EAHjB,SAI0D,IAA1CtC,KAAK0B,SAASK,QAAQO,EAAW1B,IAJjD,0CAKuB0B,EAAW1B,IALlC,uMAtCJ,8DAkDwB,CAAahB,GAsBxB4C,EAAe,IApB5B,WAII,WAAY5C,EAAUuC,GAAe,yBAH9BM,WAG6B,OAF5BN,SAE4B,OAD5BvC,SAC4B,EAChCI,KAAKJ,IAAMA,EACXI,KAAKyC,MAAQ,IAAIC,MACbP,GACAnC,KAAK2C,YAAYR,GAR7B,+CAYI,SAAmBA,GACf,GAAIA,IAAQnC,KAAKmC,IAAjB,CACAnC,KAAKmC,IAAMA,EACX,IAAMtC,EAAMG,KAAKJ,IAAIgD,YAAYT,GACjCnC,KAAKyC,MAAMI,IAAMhD,OAhBzB,KAoB4B,CAAiBD,G,gCCnH9BkD,EA5BO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SACrBC,EAAaF,EAAbE,MAAOrC,EAAMmC,EAANnC,GACR3B,EAAYF,EAAegE,GAASA,EAAM9D,UAAUY,IAAMkD,EAAMG,cAAcrD,IAC9EsD,EAAaC,uBAAY,WAC3BJ,EAASD,EAAMnC,MAChB,CAACmC,EAAOC,IACX,OACI,sBAAKK,UAAU,4BAAf,UACKpE,GAAa,qBACV4D,IAAK5D,EACLqE,IAAI,YACJC,QAAQ,SAEZ,sBAAKF,UAAU,UAAf,UACA,qBAAKA,UAAU,QAAf,SACKJ,IAEL,mBAAGI,UAAU,WAAWhD,KAAMT,EAAI4D,eAAe5C,GAAKN,OAAO,SAASmD,IAAI,aAA1E,gCAIA,cAACC,EAAA,EAAD,CAAYC,QAASR,EAAYS,MAAM,YAAvC,SACI,cAAC,IAAD,U,SCDDC,EArBG,SAAC,GAAmE,IAAlEC,EAAiE,EAAjEA,OAAQd,EAAyD,EAAzDA,SAAUK,EAA+C,EAA/CA,UAAWU,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,WAAuB,EACnDC,oBAAkB,GADiC,mBAC1EV,EAD0E,KACjEW,EADiE,KAE3EC,EAAiDf,uBAAY,SAACgB,GAChE,IAAMC,EAAID,EAAEE,cACRN,IAAeT,GAAWc,EAAEE,aAAeF,EAAEG,aAAeH,EAAEI,UAAY,IAC1EP,GAAW,GACXF,IAAaU,MAAK,kBAAMR,GAAW,SAExC,CAACF,EAAYT,IAEhB,OACA,sBACAF,UAAWA,EACXc,SAAUA,EAFV,UAGKL,EAAO7B,KAAI,SAAAtB,GAAC,OAAI,cAAC,EAAD,CAAeoC,MAAOpC,EAAcqC,SAAUA,GAAhBrC,EAAEC,OAChD2C,GAAW,cAACoB,EAAA,EAAD,IACXZ,GAAe,qBAAKa,MAAO,CAACC,OAAQ,W,+FC4C9BC,G,MA9DG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAsB,EACvBf,mBAAiB,IADM,mBAC1CgB,EAD0C,KACnCC,EADmC,OAEfjB,oBAAkB,GAFH,mBAE1CkB,EAF0C,KAE/BC,EAF+B,KAI3CC,EAAajC,uBAAY,SAAAkC,GACN,KAAjBA,EAAIC,WACJP,IACAM,EAAIhF,OAAOkF,UAEhB,CAACR,IAEES,EAAoBrC,uBAAY,SAAAkC,GAClCJ,EAASI,EAAIhF,OAAOoF,OACpBX,EAASO,KACV,CAACP,IAEEY,EAAcvC,uBAAY,WAC5B8B,EAAS,MACV,IAEGU,EAAaxC,uBAAY,WAC3BgC,GAAa,KACd,IAEGS,EAAezC,uBAAY,WAC7BgC,GAAa,KACd,IACH,OACQ,cAACU,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACKZ,EACD,eAACa,EAAA,EAAD,WACI,cAACtC,EAAA,EAAD,CAAYE,MAAM,YAAYqC,KAAK,QAAQtC,QAASiC,EAApD,SACI,cAAC,IAAD,MAEJ,cAACM,EAAA,EAAD,CACItC,MAAM,YACNgB,MAAO,CAAChB,MAAO,SACfuC,YAAY,SACZT,MAAOT,EACPF,SAAUU,EACVJ,WAAYA,EACZe,WAAS,EACTC,aACI,cAACC,EAAA,EAAD,CAAgBP,SAAS,MAAzB,SACI,cAACrC,EAAA,EAAD,CACA6C,aAAW,cACX3C,MAAM,YACND,QAASgC,EAHT,SAII,cAAC,IAAD,aAKpB,eAACK,EAAA,EAAD,WACI,cAACQ,EAAA,EAAD,CAAY5B,MAAO,CAAC6B,KAAM,GAA1B,wBACA,cAAC/C,EAAA,EAAD,CAAYE,MAAM,YAAYD,QAASkC,EAAvC,SACI,cAAC,IAAD,a,0KC+CTa,I,MA7FA,SAAC,GAA8E,IAAD,EAA3EC,EAA2E,EAA3EA,aAAcC,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,YAAyB,EAC3D9C,oBAAkB,GADyC,mBAClF+C,EADkF,KACzEC,EADyE,OAE7DhD,mBAAwB,MAFqC,mBAElFiD,EAFkF,KAE1EC,EAF0E,OAG3DlD,oBAAkB,GAHyC,mBAGlFV,EAHkF,KAGzEW,EAHyE,OAInDD,mBAAiB,GAJkC,mBAIlFmD,EAJkF,KAIrEC,EAJqE,KAMzFC,qBAAU,WACN9E,EAAaC,MAAM8E,aAAe,kBAAMF,EAAeG,KAAKC,KAAKjF,EAAaC,MAAM2E,eACpF5E,EAAaC,MAAMiF,QAAU,kBAAMT,GAAW,IAC9CzE,EAAaC,MAAMkF,aAAe,kBAAMzD,GAAW,IACnD1B,EAAaC,MAAMmF,YAAc,kBAAM1D,GAAW,MACnD,IAEHoD,qBAAU,WACN9E,EAAaC,MAAMoF,OAAS,WACxBZ,GAAW,GACPJ,GACAA,KAGRrE,EAAaC,MAAMqF,QAAU,WACzBb,GAAW,GACPL,GACAA,OAGT,CAACC,EAAcD,IAElB,IAAMmB,EAAmB3E,uBAAY,SAACuD,GAClCQ,EAAUR,EAAa/F,IACvB4B,EAAaG,YAAYgE,EAAa/F,IACtCyG,EAAe,GACXP,GACAtE,EAAaC,MAAMuF,OAAOC,MAAMC,QAAQC,OAE7C,CAACrB,IAEJQ,qBAAU,WACFJ,IAAWP,EAAa/F,IACxBmH,EAAiBpB,KAEtB,CAACoB,EAAkBb,EAAQP,IAE9B,IN7DuByB,EM6DjBC,EAAWjF,uBAAY,WACfxD,EAAI0I,qBAAqB3B,EAAa/F,IAC9C2H,UACH,CAAC5B,IAEE6B,EAAcpF,uBAAY,WACxB4D,EACAxE,EAAaC,MAAMgG,QAEnBjG,EAAaC,MAAMuF,SAExB,CAAChB,IAEE0B,EAAiBtF,uBAAY,SAACuF,EAAGC,GACnCpG,EAAaC,MAAM2E,YAAcwB,IAClC,IAEGC,EAAoBzF,uBAAY,WAClC2D,GAAaD,KACd,CAACA,EAAUC,IAEd,OACI,sBAAK1D,UAAU,mBAAf,UACI,sBAAKA,UAAU,4BAAf,UACI,sBAAMuB,MAAO,CAAEkE,OAAQ,EAAGC,YAAa,IAAvC,UNrFWX,EMqF8ChB,ENpFrEgB,EAAOZ,KAAKC,KAAKW,GACX,GAAN,OAAUnK,EAAQuJ,KAAKwB,MAAMZ,EAAK,IAAK,GAAvC,YAA6CnK,EAAQmK,EAAK,GAAI,OMoFlD,cAACa,EAAA,EAAD,CAAQrF,MAAM,YAAYmB,SAAU2D,EAAgBQ,IAAK5K,EAAkBqI,EAAapI,UAAW4K,IAAK,EAAGzD,MAAO0B,IAClH,sBAAMxC,MAAO,CAAEkE,OAAQ,EAAGM,WAAY,IAAtC,SAA6CzC,EAAapI,cAE9D,sBAAK8E,UAAU,0BAAf,UACKE,EAAU,qBAAKqB,MAAO,CAAEyE,QAAS,IAAvB,SAA6B,cAACC,EAAA,EAAD,CAAkB1F,MAAM,YAAY2F,KAAM,OAC9E,cAAC7F,EAAA,EAAD,CAAYC,QAAS6E,EAAa5E,MAAM,YAAxC,SACKoD,EAAU,cAAC,KAAD,IAAgB,cAAC,KAAD,MAEnC,cAACtD,EAAA,EAAD,CAAYC,QAAS0E,EAAUzE,MAAM,YAArC,SACI,cAAC,KAAD,MAEJ,cAAC4F,EAAA,EAAD,CAASvG,MAAM,WAAf,SACI,cAACS,EAAA,EAAD,CAAYC,QAASkF,EAAmBjF,MAAM,YAA9C,SACKkD,EAAW,cAAC,IAAD,IAA4B,cAAC,IAAD,QAGhD,sBAAKzD,UAAU,2BAAf,UACI,cAACmD,EAAA,EAAD,CAAYiD,QAAQ,YAAYC,QAAM,EAAtC,SAAwC/C,EAAa1D,QACrD,cAACuD,EAAA,EAAD,CAAYiD,QAAQ,YAAY7E,MAAO,CAAEhB,MAAO,UAAY8F,QAAM,EAAlE,mBAAoE/C,EAAagD,cAAjF,aAAoE,EAAqBC,kB,oBCjE9FC,I,MA5BM,SAAC,GAAyC,IAAvC9G,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAUgE,EAAqB,EAArBA,QAC7B/D,EAAkBF,EAAlBE,MAAO0G,EAAW5G,EAAX4G,OACTG,EAAe/K,EAAegE,GAASA,EAAM9D,UAAUY,IAAMkD,EAAMG,cAAcrD,IACjFsD,EAAaC,uBAAY,WAC3BJ,EAASD,EAAMnC,MAChB,CAACmC,EAAOC,IACX,OACI,sBAAKK,UAAW0G,YAAK,2BAA4B,CAAC/C,YAAlD,UACK8C,GAAgB,qBACbjH,IAAKiH,EACLxG,IAAI,YACJC,QAAQ,SAEZ,sBAAKF,UAAU,UAAf,UACA,qBAAKA,UAAU,QAAf,SACKJ,IAEL,qBAAKI,UAAU,WAAf,gBACKsG,QADL,IACKA,OADL,EACKA,EAAQC,UAGb,cAAClG,EAAA,EAAD,CAAYL,UAAW0G,YAAK,OAAQ,CAAC/C,YAAWrD,QAASR,EAAYS,MAAM,YAA3E,SACI,cAAC,KAAD,WC8CDoG,GA3DU,SAAC,GAA8G,IAA7GC,EAA4G,EAA5GA,eAAgBC,EAA4F,EAA5FA,aAActD,EAA8E,EAA9EA,WAAYC,EAAkE,EAAlEA,aAAcsD,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,MAAOtD,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAAwB,EAC/G9C,oBAAkB,GAD6F,mBAC5HoG,EAD4H,KACxHC,EADwH,OAE7FrG,mBAAyB,IAFoE,mBAE5H1B,EAF4H,KAE/GgI,EAF+G,OAGrGtG,oBAAkB,GAHmF,mBAG5HV,EAH4H,KAGnHW,EAHmH,OAI/FD,mBAAwB,MAJuE,mBAI5HuG,EAJ4H,KAIhHC,EAJgH,KAM7HC,EAAetH,uBAAY,WAC7BkH,GAAOD,KACR,CAACA,IAEEM,EAAiBvH,sBAAW,uCAAC,WAAOjB,GAAP,eAAAjC,EAAA,6DAC/BgE,GAAW,GADoB,SAEbtE,EAAIyC,QAAQF,GAFC,OAEzB3B,EAFyB,OAI3B+J,EADA/J,GAGe,IAEnB0D,GAAW,GARoB,2CAAD,sDAS/B,IAYH,OAVAoD,qBAAU,WACFkD,GACAG,EAAeH,KAEpB,CAACA,EAAYG,IAEhBrD,qBAAU,WAAO,IAAD,EACZmD,EAAa,UAACR,EAAeC,UAAhB,aAAC,EAA8BtJ,MAC7C,CAACsJ,EAAcD,KAGI,IAAlBC,EACA,sBAAK7G,UAAW0G,YAAK,WAAY,CAACa,KAAMP,IAAxC,UACI,sBAAKhH,UAAU,cAAf,UACI,qBAAKA,UAAU,mBAAf,SACC6G,GAAgBD,EAAepL,OAC5B,cAAC8F,EAAA,EAAD,IACA,cAAC,GAAD,CAAQmC,SAAUA,EAAUC,YAAaA,EAAaJ,aAAcsD,EAAeC,GAAetD,WAAYA,EAAYC,aAAcA,MAE5I,cAACnD,EAAA,EAAD,CAAYC,QAAS+G,EAAc9G,MAAM,YAAzC,SACKyG,EAAK,cAAC,IAAD,IAAU,cAAC,IAAD,SAGxB,sBAAKhH,UAAU,kBAAf,UACA,qBAAKA,UAAW0G,YAAK,QAArB,SACKE,EACIhI,KAAI,SAAC4I,EAAMjK,GAAP,OACD,cAAC,GAAD,CAAoCmC,MAAO8H,EAAM7H,SAAU,kBAAMmH,EAAUvJ,IAAKoG,QAASpG,IAAOsJ,GAAhG,kBAA8BtJ,SAE1C,cAAC4F,EAAA,EAAD,CAAYnD,UAAW0G,YAAK,WAAYN,QAAQ,KAAKqB,UAAU,KAA/D,uBACCvH,EACG,qBAAKqB,MAAO,CAACmG,WAAY,GAAIC,cAAe,IAA5C,SAAiD,cAACrG,EAAA,EAAD,MAA0B,cAAC,EAAD,CAAWtB,UAAW0G,YAAK,QAASjG,OAAQvB,EAAaS,SAAUoH,UAG7I,M,UCkCFa,OArGf,WAAgB,IAAD,EACchH,mBAAuB,IADrC,mBACPH,EADO,KACCoH,EADD,OAEQjH,oBAAkB,GAF1B,mBAEPkH,EAFO,KAEFC,EAFE,OAGkBnH,oBAAkB,GAHpC,mBAGP6C,EAHO,KAGGC,EAHH,OAIgB9C,oBAAkB,GAJlC,mBAIPV,EAJO,KAIEW,EAJF,OAK8BD,mBAAsC,IALpE,mBAKPgG,EALO,KAKSoB,EALT,OAM0BpH,mBAA8B,MANxD,mBAMP9C,EANO,KAMOmK,EANP,OAOgBrH,oBAAkB,GAPlC,mBAOPtC,EAPO,KAOE4J,EAPF,OAQsBtH,mBAAiB,IARvC,mBAQPpD,EARO,KAQK2K,EARL,KAURC,EAAqBrI,uBAAY,SAACkC,GACvC,IAAMoG,EAAMpG,EAAIhF,OAAOoF,MACvB8F,EAAcE,KACZ,IAEGC,EAAWvI,uBAAY,YACb,uCAAG,4BAAAlD,EAAA,sEAEhBgE,GAAW,GAFK,SAGKtE,EAAIgM,OAAO/K,GAHhB,QAGVnC,EAHU,SAKfwM,EAAUxM,EAAOuC,MAAM4K,QAAO,SAAAjN,GAAC,MAAe,UAAXA,EAAEsC,SACrCoK,EAAgB5M,EAAOyC,eAEvB+J,EAAU,IAEXhH,GAAW,GAVK,gDAYhBgE,QAAQC,IAAR,MAZgB,yDAAH,qDAef2D,KACE,CAACjL,IAEEmC,EAAWI,uBAAY,SAACnD,GAG7B,GAFAwB,EAASG,IAAI3B,GACboL,EAAkB5J,EAASwI,gBACvBkB,GAAOrE,EAAU,CACpBsE,GAAO,GACP,IAAMtJ,EAAOL,EAASsK,YAAY9L,QACrB+L,IAATlK,GACHyJ,EAAWzJ,MAGX,CAACqJ,EAAKrE,IAETQ,qBAAU,WAEL6D,GAAOrE,GAAYrF,EAASwI,eAAepL,OAAS,GACvD4C,EAASK,OAAO4C,MAAK,SAAC5C,QACRkK,IAATlK,IACHuJ,EAAkB5J,EAASwI,gBAC3BsB,EAAWzJ,SAIZ,CAACqJ,EAAKrE,EAAU9D,IAEnB,IAAM4D,EAAaxD,uBAAY,WAC9BgI,GAAO,KACL,IAEGvE,EAAezD,uBAAY,WAChCgI,GAAO,KACL,IAEGa,EAAgB7I,uBAAY,SAACxC,GAClCa,EAASE,QAAUf,EACnB2K,EAAW3K,KACT,IAEGsL,EAAuB9I,sBAAW,sBAAC,8BAAAlD,EAAA,yDACnB,OAAjBiB,EADoC,iEAEnBvB,EAAIuM,eAAehL,GAFA,QAElCzC,EAFkC,UAIjC0N,EAAY1N,EAAOuC,MAAM4K,QAAO,SAAAjN,GAAC,MAAe,UAAXA,EAAEsC,QAC7CgK,EAAUpH,EAAOuI,OAAOD,IACxBd,EAAgB5M,EAAOyC,eANgB,2CAQtC,CAACA,EAAc2C,IAClB,OACC,cAACwI,GAAA,EAAD,CAAenN,MAAOA,EAAtB,SACC,sBAAKkE,UAAU,aAAauB,MAAO,CAAEC,OAAQ,QAAS0H,SAAU,UAAhE,UACC,cAAC,EAAD,CAAWxH,SAAU0G,EAAoBzG,SAAU2G,IAClDpI,EACA,cAACoB,EAAA,EAAD,IACA,cAAC,EAAD,CACCtB,UAAW,aACXU,aAAW,EACXD,OAAQA,EACRd,SAAUA,EACVgB,WAAYkI,IACd,cAAC,GAAD,CACApF,SAAUA,EACVC,YAAaA,EACboD,UAAW8B,EAAe7B,MAAOpH,EAAUiH,eAAgBA,EAAgBC,aAAcvI,EAASiF,WAAYA,EAAYC,aAAcA,UC/F7H2F,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhI,MAAK,YAAkD,IAA/CiI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF/M,SAASgN,eAAe,SAM1BX,O","file":"static/js/main.dc707ed7.chunk.js","sourcesContent":["import {SuggestVideo} from '../types'\r\n\r\nexport const zeroPad = (num: number, places: number) => String(num).padStart(places, '0')\r\n\r\nexport const formatTime = (time: number) => {\r\n    time = Math.ceil(time)\r\n    return `${zeroPad(Math.floor(time/60), 2)}:${zeroPad(time%60, 2)}`\r\n}\r\n\r\nexport const durationToSeconds = (duration: string | null): number => {\r\n    if (duration === null) {\r\n        return 0\r\n    }\r\n    const numbers = duration.split(':')\r\n    let result: number = 0\r\n    let base = 1\r\n    for (let i = 0 ; i < numbers.length ; i++) {\r\n        result += parseInt(numbers[numbers.length - 1 - i])*base\r\n        base *= 60\r\n    }\r\n    return result\r\n}\r\n\r\nexport const isSuggestVideo = (obj: any): obj is SuggestVideo => {\r\n    return obj.thumbnail\r\n}","import {createMuiTheme} from '@material-ui/core'\r\n\r\nexport const URL = 'https://zb3ad4304-gtw.qovery.io'\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#303030',\r\n            main: '#000',\r\n            dark: '#303030',\r\n            contrastText: '#ffa600',\r\n        },\r\n        secondary: {\r\n            light: '#fff',\r\n            main: '#ffa600',\r\n            dark: '#fff',\r\n            contrastText: '#fff',\r\n        }\r\n    }\r\n})","import { URL } from '../constants'\r\nimport { VideoCache, SuggestVideo, SuggestionsCache } from '../types'\r\nimport { Result as SearchResult, Video, Continuation, ContinueResult } from 'ytsr'\r\n\r\nclass API {\r\n    private url: string\r\n    private cache: VideoCache\r\n    private suggestionsCache: SuggestionsCache\r\n    constructor(url: string) {\r\n        this.url = url\r\n        this.cache = {}\r\n        this.suggestionsCache = {}\r\n    }\r\n    public getYoutubeLink(videoId: string): string {\r\n        return `https://youtu.be/${videoId}`\r\n    }\r\n    public getInfo(videoId: string): Video | SuggestVideo {\r\n        return this.cache[videoId]\r\n    }\r\n    public getAudioURL(videoId: string): string {\r\n        return `${this.url}/stream/v2?vid=${videoId}`\r\n    }\r\n    public getAudioDownloadLink(videoId: string): HTMLAnchorElement {\r\n        const a = document.createElement('a')\r\n        a.href = `${this.url}/download?vid=${videoId}`\r\n        a.target = '_blank'\r\n        return a\r\n    }\r\n    public async suggest(videoId: string): Promise<Array<SuggestVideo> | null> {\r\n        if (videoId in this.suggestionsCache) {\r\n            return this.suggestionsCache[videoId]\r\n        }\r\n        try {\r\n            const res = await fetch(`${URL}/suggest?vid=${videoId}`)\r\n            const result: SuggestVideo[] = await res.json()\r\n            result.forEach(v => {\r\n                if (!(v.id in this.cache)) {\r\n                    this.cache[v.id] = v\r\n                }\r\n            })\r\n            this.suggestionsCache[videoId] = result\r\n            return result\r\n        } catch (err) {\r\n            return null\r\n        }\r\n    }\r\n    public async search(searchTerm: string): Promise<SearchResult | null> {\r\n        const formatSearchTearm = encodeURIComponent(searchTerm.replace(' ', '+'))\r\n        try {\r\n            const res = await fetch(`${URL}/search?q=${formatSearchTearm}`)\r\n            const result: SearchResult = await res.json()\r\n            result.items.forEach(i => {\r\n                if (i.type === 'video') {\r\n                    this.cache[i.id] = i\r\n                }\r\n            })\r\n            return result\r\n        } catch (err) {\r\n            return null\r\n        }\r\n    }\r\n    public async searchContinue(continuation: Continuation): Promise<ContinueResult | null> {\r\n        try {\r\n            const res = await fetch(`${URL}/search`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(continuation)\r\n            })\r\n            const result: SearchResult = await res.json()\r\n            result.items.forEach(i => {\r\n                if (i.type === 'video') {\r\n                    this.cache[i.id] = i\r\n                }\r\n            })\r\n            return result\r\n        } catch (err) {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport const api = new API(URL);\r\n\r\nexport class Playlist {\r\n    private videoIds: Array<string>;\r\n    public current: number;\r\n    private api: API;\r\n    constructor(api: API, videoIds?: Array<string>) {\r\n        this.videoIds = videoIds ? videoIds : []\r\n        this.current = -1\r\n        this.api = api\r\n        this.add = this.add.bind(this)\r\n        this.next = this.next.bind(this)\r\n    }\r\n    add(videoId: string) {\r\n        if (this.videoIds.indexOf(videoId) === -1) {\r\n            this.videoIds.push(videoId)\r\n        }\r\n    }\r\n    get playlistVideos(): Array<Video | SuggestVideo> {\r\n        return this.videoIds.map(id => this.api.getInfo(id))\r\n    }\r\n    setCurByVid(vid: string): number | void {\r\n        const newCur = this.videoIds.indexOf(vid)\r\n        if (newCur !== -1) {\r\n            this.current = newCur\r\n            return this.current\r\n        }\r\n    }\r\n    async next(): Promise<number | void> {\r\n        if (this.current < this.videoIds.length - 1) {\r\n            this.current += 1\r\n            return this.current\r\n        }\r\n        const suggestion = await this.suggest(this.videoIds[this.current])\r\n        if (suggestion) {\r\n            this.add(suggestion)\r\n            return await this.next()\r\n        }\r\n    }\r\n    // return a suggested video id that is not in the playlist\r\n    private async suggest(videoId: string): Promise<string | void> {\r\n        const suggestions = await this.api.suggest(videoId)\r\n        if (suggestions) {\r\n            for (let suggestion of suggestions) {\r\n                if (this.videoIds.indexOf(suggestion.id) === -1) {\r\n                    return suggestion.id\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const playlist = new Playlist(api)\r\n\r\nexport class AudioManager {\r\n    public audio: HTMLAudioElement\r\n    private vid?: string;\r\n    private api: API\r\n    constructor(api: API, vid?: string) {\r\n        this.api = api\r\n        this.audio = new Audio()\r\n        if (vid) {\r\n            this.updateAudio(vid)\r\n        }\r\n    }\r\n\r\n    public updateAudio(vid: string): void {\r\n        if (vid === this.vid) return\r\n        this.vid = vid\r\n        const url = this.api.getAudioURL(vid)\r\n        this.audio.src = url\r\n    }\r\n}\r\n\r\nexport const audioManager = new AudioManager(api);","import React, { useCallback } from 'react'\r\nimport {Video} from 'ytsr'\r\nimport {SuggestVideo} from '../types'\r\nimport { isSuggestVideo } from '../utils'\r\nimport {IconButton} from '@material-ui/core'\r\nimport {api} from '../services'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport './VideoListItem.css'\r\n\r\ninterface Props {\r\n    video: Video | SuggestVideo;\r\n    setVideo: (videoId: string) => void;\r\n}\r\n\r\nconst VideoListItem = ({ video, setVideo }: Props) => {\r\n    const {title, id} = video\r\n    const thumbnail = isSuggestVideo(video) ? video.thumbnail.url : video.bestThumbnail.url\r\n    const onVidClick = useCallback(() => {\r\n        setVideo(video.id)\r\n    }, [video, setVideo])\r\n    return (\r\n        <div className='video-list-item-container'>\r\n            {thumbnail && <img\r\n                src={thumbnail}\r\n                alt='thumbnail'\r\n                loading='lazy'\r\n            />}\r\n            <div className='content'>\r\n            <div className='title'>\r\n                {title}\r\n            </div>\r\n            <a className=\"subtitle\" href={api.getYoutubeLink(id)} target='_blank' rel='noreferrer'>\r\n                Open in YouTube\r\n            </a>\r\n            </div>\r\n            <IconButton onClick={onVidClick} color='secondary'>\r\n                <AddCircleOutlineIcon/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoListItem","import React, { useCallback, useState } from 'react'\r\nimport VideoListItem from './VideoListItem'\r\nimport {Video} from 'ytsr'\r\nimport {SuggestVideo} from '../types'\r\nimport { LinearProgress } from '@material-ui/core'\r\n\r\ninterface Props{\r\n    videos: Array<Video | SuggestVideo>;\r\n    setVideo: (video: string) => void;\r\n    loadVideos?: () => Promise<void>;\r\n    className?: string;\r\n    spaceBottom?: boolean;\r\n}\r\n\r\nconst VideoList = ({videos, setVideo, className, spaceBottom, loadVideos}: Props) => {\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const onScroll: React.UIEventHandler<HTMLDivElement> = useCallback((e) => {\r\n        const d = e.currentTarget\r\n        if (loadVideos && !loading && d.scrollHeight - d.offsetHeight - d.scrollTop < 2) {\r\n            setLoading(true)\r\n            loadVideos().then(() => setLoading(false))\r\n        }\r\n    }, [loadVideos, loading])\r\n    \r\n    return (\r\n    <div \r\n    className={className}\r\n    onScroll={onScroll}>\r\n        {videos.map(v => <VideoListItem video={v} key={v.id} setVideo={setVideo}/>)}\r\n        {loading && <LinearProgress/>}\r\n        {spaceBottom && <div style={{height: 100}}/>}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default VideoList","import React, { useCallback, useState } from 'react'\r\nimport { Input, AppBar, Toolbar, InputAdornment, IconButton, Typography } from '@material-ui/core'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport './SearchBar.css'\r\n\r\ninterface Props{\r\n    onChange: (evt: any) => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nconst SearchBar = ({ onChange, onSubmit }: Props) => {\r\n    const [input, setInput] = useState<string>('')\r\n    const [inputMode, setInputMode] = useState<boolean>(false)\r\n\r\n    const onKeyPress = useCallback(evt => {\r\n        if (evt.charCode === 13) {\r\n            onSubmit()\r\n            evt.target.blur()\r\n        }\r\n    }, [onSubmit])\r\n\r\n    const handleInputChange = useCallback(evt => {\r\n        setInput(evt.target.value)\r\n        onChange(evt)\r\n    }, [onChange])\r\n\r\n    const handleClear = useCallback(() => {\r\n        setInput('')\r\n    }, [])\r\n\r\n    const handleBack = useCallback(() => {\r\n        setInputMode(false)\r\n    }, [])\r\n\r\n    const handleSearch = useCallback(() => {\r\n        setInputMode(true)\r\n    }, [])\r\n    return (\r\n            <AppBar position='static'>\r\n                {inputMode ?\r\n                <Toolbar>\r\n                    <IconButton color='secondary' edge=\"start\" onClick={handleBack}>\r\n                        <ArrowBackIosIcon/>\r\n                    </IconButton>\r\n                    <Input\r\n                        color='secondary'\r\n                        style={{color: 'white'}}\r\n                        placeholder=\"Search\"\r\n                        value={input}\r\n                        onChange={handleInputChange}\r\n                        onKeyPress={onKeyPress}\r\n                        fullWidth\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                aria-label=\"clear input\"\r\n                                color='secondary'\r\n                                onClick={handleClear}>\r\n                                    <ClearIcon/>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }/>\r\n                </Toolbar> : \r\n                <Toolbar>\r\n                    <Typography style={{flex: 1}}>ListenTube</Typography>\r\n                    <IconButton color='secondary' onClick={handleSearch}>\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                </Toolbar>}\r\n            </AppBar>)\r\n}\r\n\r\nexport default SearchBar","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Slider, IconButton, Typography, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled'\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled'\r\nimport { formatTime, durationToSeconds } from '../utils'\r\nimport { api, audioManager } from '../services'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\r\nimport PauseIcon from '@material-ui/icons/Pause'\r\nimport DownloadIcon from '@material-ui/icons/GetApp'\r\nimport { Video } from 'ytsr'\r\nimport { SuggestVideo } from '../types'\r\nimport './Player.css'\r\n\r\n\r\ninterface Props {\r\n    videoDetails: Video | SuggestVideo;\r\n    onVideoEnd?: () => void;\r\n    onVideoStart?: () => void;\r\n    autoplay: boolean;\r\n    setAutoplay: (on: boolean) => void;\r\n}\r\n\r\nconst Player = ({ videoDetails, onVideoEnd, onVideoStart, autoplay, setAutoplay }: Props) => {\r\n    const [playing, setPlaying] = useState<boolean>(false)\r\n    const [curVId, setCurVId] = useState<string | null>(null)\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [currentTime, setCurrentTime] = useState<number>(0)\r\n\r\n    useEffect(() => {\r\n        audioManager.audio.ontimeupdate = () => setCurrentTime(Math.ceil(audioManager.audio.currentTime))\r\n        audioManager.audio.onpause = () => setPlaying(false)\r\n        audioManager.audio.onloadeddata = () => setLoading(false)\r\n        audioManager.audio.onloadstart = () => setLoading(true)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        audioManager.audio.onplay = () => {\r\n            setPlaying(true)\r\n            if (onVideoStart) {\r\n                onVideoStart()\r\n            }\r\n        }\r\n        audioManager.audio.onended = () => {\r\n            setPlaying(false)\r\n            if (onVideoEnd) {\r\n                onVideoEnd()\r\n            }\r\n        }\r\n    }, [onVideoStart, onVideoEnd])\r\n\r\n    const setupForNewVideo = useCallback((videoDetails: Video | SuggestVideo) => {\r\n        setCurVId(videoDetails.id)\r\n        audioManager.updateAudio(videoDetails.id)\r\n        setCurrentTime(0)\r\n        if (autoplay) {\r\n            audioManager.audio.play().catch(console.log)\r\n        }\r\n    }, [autoplay])\r\n\r\n    useEffect(() => {\r\n        if (curVId !== videoDetails.id) {\r\n            setupForNewVideo(videoDetails)\r\n        }\r\n    }, [setupForNewVideo, curVId, videoDetails])\r\n\r\n    const download = useCallback(() => {\r\n        const a = api.getAudioDownloadLink(videoDetails.id)\r\n        a.click()\r\n    }, [videoDetails])\r\n\r\n    const playOrPause = useCallback(() => {\r\n        if (playing) {\r\n            audioManager.audio.pause()\r\n        } else {\r\n            audioManager.audio.play()\r\n        }\r\n    }, [playing])\r\n\r\n    const onSliderChange = useCallback((_, val) => {\r\n        audioManager.audio.currentTime = val\r\n    }, [])\r\n\r\n    const handleAutoplayBtn = useCallback(() => {\r\n        setAutoplay(!autoplay)\r\n    }, [autoplay, setAutoplay])\r\n\r\n    return (\r\n        <div className='player-container'>\r\n            <div className='player-progress-container'>\r\n                <span style={{ margin: 5, marginRight: 15 }}>{formatTime(currentTime)}</span>\r\n                <Slider color='secondary' onChange={onSliderChange} max={durationToSeconds(videoDetails.duration)} min={0} value={currentTime} />\r\n                <span style={{ margin: 5, marginLeft: 15 }}>{videoDetails.duration}</span>\r\n            </div>\r\n            <div className='player-bottom-container'>\r\n                {loading ? <div style={{ padding: 12 }}><CircularProgress color='secondary' size={22} /></div> :\r\n                    <IconButton onClick={playOrPause} color='secondary'>\r\n                        {playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                    </IconButton>}\r\n                <IconButton onClick={download} color='secondary'>\r\n                    <DownloadIcon />\r\n                </IconButton>\r\n                <Tooltip title=\"autoplay\">\r\n                    <IconButton onClick={handleAutoplayBtn} color='secondary'>\r\n                        {autoplay ? <PauseCircleFilledIcon /> : <PlayCircleFilledIcon />}\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <div className='player-details-container'>\r\n                    <Typography variant=\"subtitle1\" noWrap>{videoDetails.title}</Typography>\r\n                    <Typography variant=\"subtitle2\" style={{ color: 'silver' }} noWrap>{videoDetails.author?.name}</Typography>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player","import React, { useCallback } from 'react'\r\nimport {Video} from 'ytsr'\r\nimport {SuggestVideo} from '../types'\r\nimport { isSuggestVideo } from '../utils'\r\nimport {IconButton} from '@material-ui/core'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline'\r\nimport clsx from 'clsx'\r\nimport './PlaylistItem.css'\r\n\r\ninterface Props {\r\n    video: Video | SuggestVideo;\r\n    playing?: boolean;\r\n    setVideo: (videoId: string) => void;\r\n}\r\n\r\nconst PlaylistItem = ({ video, setVideo, playing }: Props) => {\r\n    const { title, author } = video\r\n    const thumbnailUrl = isSuggestVideo(video) ? video.thumbnail.url : video.bestThumbnail.url\r\n    const onVidClick = useCallback(() => {\r\n        setVideo(video.id)\r\n    }, [video, setVideo])\r\n    return (\r\n        <div className={clsx('play-list-item-container', {playing})}>\r\n            {thumbnailUrl && <img\r\n                src={thumbnailUrl}\r\n                alt='thumbnail'\r\n                loading='lazy'\r\n            />}\r\n            <div className='content'>\r\n            <div className='title'>\r\n                {title}\r\n            </div>\r\n            <div className=\"subtitle\">\r\n                {author?.name}\r\n            </div>\r\n            </div>\r\n            <IconButton className={clsx('icon', {playing})} onClick={onVidClick} color='secondary'>\r\n                <PlayCircleOutlineIcon/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaylistItem","import React, { useState, useCallback, useEffect } from \"react\"\r\nimport clsx from 'clsx'\r\nimport './PlaylistRenderer.css'\r\nimport {IconButton, LinearProgress, Typography} from '@material-ui/core'\r\nimport Up from '@material-ui/icons/ExpandLess'\r\nimport Down from '@material-ui/icons/ExpandMore'\r\nimport Player from './Player'\r\nimport VideoList from './VideoList'\r\nimport {Video} from 'ytsr'\r\nimport PlaylistItem from \"./PlaylistItem\"\r\nimport {SuggestVideo} from '../types'\r\nimport {api} from '../services'\r\n\r\ninterface Props {\r\n    playlistVideos: Array<Video | SuggestVideo>;\r\n    currentIndex: number;\r\n    onVideoEnd?: () => void;\r\n    onVideoStart?: () => void;\r\n    autoplay: boolean;\r\n    setAutoplay: (on: boolean) => void;\r\n    playVideo: (id: number) => void;\r\n    onAdd: (videoId: string) => void;\r\n}\r\n\r\nconst PlaylistRenderer = ({playlistVideos, currentIndex, onVideoEnd, onVideoStart, playVideo, onAdd, autoplay, setAutoplay}: Props) => {\r\n    const [on, setOn] = useState<boolean>(false)\r\n    const [suggestions, setSuggestions] = useState<SuggestVideo[]>([])\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [currentVId, setCurrentVId] = useState<string | null>(null)\r\n\r\n    const toggleExpand = useCallback(() => {\r\n        setOn(!on)\r\n    }, [on])\r\n\r\n    const getSuggestions = useCallback(async (vid: string) => {\r\n        setLoading(true)\r\n        const res = await api.suggest(vid)\r\n        if (res) {\r\n            setSuggestions(res)\r\n        } else {\r\n            setSuggestions([])\r\n        }\r\n        setLoading(false)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (currentVId) {\r\n            getSuggestions(currentVId)\r\n        }\r\n    }, [currentVId, getSuggestions])\r\n\r\n    useEffect(() => {\r\n        setCurrentVId(playlistVideos[currentIndex]?.id)\r\n    }, [currentIndex, playlistVideos])\r\n\r\n    return (\r\n        currentIndex !== -1 ?\r\n        <div className={clsx('playlist', {open: on})}>\r\n            <div className='top-section'>\r\n                <div className='player-container'>\r\n                {currentIndex >= playlistVideos.length?\r\n                    <LinearProgress/> :\r\n                    <Player autoplay={autoplay} setAutoplay={setAutoplay} videoDetails={playlistVideos[currentIndex]} onVideoEnd={onVideoEnd} onVideoStart={onVideoStart}/>}\r\n                </div>\r\n                <IconButton onClick={toggleExpand} color='secondary'>\r\n                    {on ? <Down/> : <Up/>}\r\n                </IconButton>\r\n            </div>\r\n            <div className='lists-container'>\r\n            <div className={clsx('list')}>\r\n                {playlistVideos\r\n                    .map((info, id) =>\r\n                        <PlaylistItem key={`playlist${id}`} video={info} setVideo={() => playVideo(id)} playing={id === currentIndex}/>)}\r\n            </div>\r\n            <Typography className={clsx('divider')} variant='h5' component='h5'>Suggested</Typography>\r\n            {loading ?\r\n                <div style={{paddingTop: 30, paddingBottom: 30}}><LinearProgress/></div> : <VideoList className={clsx('list')} videos={suggestions} setVideo={onAdd}/>\r\n            }\r\n            </div>\r\n        </div> : null\r\n    )\r\n}\r\n\r\nexport default PlaylistRenderer","import './App.css';\r\nimport { useState, useCallback } from 'react'\r\nimport VideoList from './components/VideoList'\r\nimport SearchBar from './components/SearchBar'\r\nimport PlaylistRenderer from './components/PlaylistRenderer'\r\nimport { theme } from './constants'\r\nimport { api, playlist } from './services'\r\nimport { LinearProgress, ThemeProvider } from '@material-ui/core'\r\nimport {Video, Continuation} from 'ytsr'\r\nimport { useEffect } from 'react';\r\nimport { SuggestVideo } from './types';\r\n\r\nfunction App() {\r\n\tconst [videos, setVideos] = useState<Array<Video>>([])\r\n\tconst [end, setEnd] = useState<boolean>(true)\r\n\tconst [autoplay, setAutoplay] = useState<boolean>(true)\r\n\tconst [loading, setLoading] = useState<boolean>(false)\r\n\tconst [playlistVideos, setPlaylistVideos] = useState<Array<Video | SuggestVideo>>([])\r\n\tconst [continuation, setContinuation] = useState<Continuation | null>(null)\r\n\tconst [current, setCurrent] = useState<number>(-1)\r\n\tconst [searchTerm, setSearchTerm] = useState<string>('')\r\n\r\n\tconst onSearchTermChange = useCallback((evt) => {\r\n\t\tconst txt = evt.target.value\r\n\t\tsetSearchTerm(txt)\r\n\t}, [])\r\n\r\n\tconst onSearch = useCallback(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true)\r\n\t\t\t\tconst result = await api.search(searchTerm)\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tsetVideos(result.items.filter(i => i.type === 'video') as Video[])\r\n\t\t\t\t\tsetContinuation(result.continuation)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetVideos([])\r\n\t\t\t\t}\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData()\r\n\t}, [searchTerm])\r\n\r\n\tconst setVideo = useCallback((videoId: string) => {\r\n\t\tplaylist.add(videoId)\r\n\t\tsetPlaylistVideos(playlist.playlistVideos)\r\n\t\tif (end && autoplay) {\r\n\t\t\tsetEnd(false)\r\n\t\t\tconst next = playlist.setCurByVid(videoId)\r\n\t\t\tif (next !== undefined) {\r\n\t\t\t\tsetCurrent(next)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [end, autoplay])\r\n\r\n\tuseEffect(() => {\r\n\t\t//for autoplaying next video\r\n\t\tif (end && autoplay && playlist.playlistVideos.length > 0) {\r\n\t\t\tplaylist.next().then((next) => {\r\n\t\t\t\tif (next !== undefined) {\r\n\t\t\t\t\tsetPlaylistVideos(playlist.playlistVideos)\r\n\t\t\t\t\tsetCurrent(next)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}, [end, autoplay, setVideo])\r\n\r\n\tconst onVideoEnd = useCallback(() => {\r\n\t\tsetEnd(true)\r\n\t}, [])\r\n\r\n\tconst onVideoStart = useCallback(() => {\r\n\t\tsetEnd(false)\r\n\t}, [])\r\n\r\n\tconst updateCurrent = useCallback((id: number) => {\r\n\t\tplaylist.current = id\r\n\t\tsetCurrent(id)\r\n\t}, [])\r\n\r\n\tconst loadMoreSearchResult = useCallback(async () => {\r\n\t\tif (continuation === null) return\r\n\t\tconst result = await api.searchContinue(continuation)\r\n\t\tif (result) {\r\n\t\t\tconst newVideos = result.items.filter(i => i.type === 'video') as Video[]\r\n\t\t\tsetVideos(videos.concat(newVideos))\r\n\t\t\tsetContinuation(result.continuation)\r\n\t\t}\r\n\t}, [continuation, videos])\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<div className='background' style={{ height: '100vh', overflow: 'hidden' }}>\r\n\t\t\t\t<SearchBar onChange={onSearchTermChange} onSubmit={onSearch} />\r\n\t\t\t\t{loading ?\r\n\t\t\t\t\t<LinearProgress /> :\r\n\t\t\t\t\t<VideoList\r\n\t\t\t\t\t\tclassName={'video-list'}\r\n\t\t\t\t\t\tspaceBottom\r\n\t\t\t\t\t\tvideos={videos}\r\n\t\t\t\t\t\tsetVideo={setVideo}\r\n\t\t\t\t\t\tloadVideos={loadMoreSearchResult}/>}\r\n\t\t\t\t<PlaylistRenderer\r\n\t\t\t\tautoplay={autoplay}\r\n\t\t\t\tsetAutoplay={setAutoplay}\r\n\t\t\t\tplayVideo={updateCurrent} onAdd={setVideo} playlistVideos={playlistVideos} currentIndex={current} onVideoEnd={onVideoEnd} onVideoStart={onVideoStart}/>\r\n\t\t\t</div>\r\n\t\t</ThemeProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}