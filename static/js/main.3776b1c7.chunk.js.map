{"version":3,"sources":["components/VideoListItem.tsx","components/VideoList.tsx","components/SearchBar.tsx","constants/index.ts","utils/index.ts","services/index.ts","components/Player.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","margin","marginTop","content","flex","cover","width","minWidth","VideoListItem","video","setVideo","title","id","classes","thumbnail","url","onVidClick","useCallback","Card","className","onClick","CardMedia","image","CardContent","Typography","component","variant","color","VideoList","videos","style","height","overflow","map","v","SearchBar","onChange","onSubmit","onKeyPress","evt","charCode","target","blur","AppBar","position","Toolbar","TextField","label","fullWidth","URL","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","zeroPad","num","places","String","padStart","formatTime","time","Math","floor","api","cache","this","videoId","cachedInfo","fetch","res","json","data","lengthSeconds","parseInt","src","Audio","searchTerm","formatSearchTearm","split","join","result","Player","useState","loading","setLoading","playing","setPlaying","currentTime","setCurrentTime","videoDetails","setVideoDetails","audioRef","useRef","fetchAudio","a","current","pause","audio","getAudio","addEventListener","round","getInfo","info","useEffect","download","document","createElement","href","click","playOrPause","play","onSliderChange","_","val","bottom","LinearProgress","background","boxShadow","alignItems","marginRight","Slider","max","min","value","marginLeft","IconButton","justifyContent","textOverflow","noWrap","author","App","setVideos","setVideoId","setSearchTerm","onSearchTermChange","txt","onSearch","search","console","log","fetchData","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3776b1c7.chunk.js","sourcesContent":["import React, { useCallback } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Card, CardContent, Typography, CardMedia } from '@material-ui/core'\r\nimport {Video} from '../types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        margin: 5,\r\n        marginTop: 20\r\n    },\r\n    content: {\r\n        flex: 1\r\n    },\r\n    cover: {\r\n        width: 150,\r\n        minWidth: 150\r\n    }\r\n}))\r\n\r\ninterface Props {\r\n    video: Video;\r\n    setVideo: (video: Video) => void;\r\n}\r\n\r\nconst VideoListItem = ({ video, setVideo }: Props) => {\r\n    const { title, id } = video\r\n    const classes = useStyles()\r\n    const thumbnail = video.thumbnail.url\r\n    const onVidClick = useCallback(() => {\r\n        setVideo(video)\r\n    }, [video, setVideo])\r\n    return (\r\n        <Card className={classes.root} onClick={onVidClick}>\r\n            <CardMedia\r\n                className={classes.cover}\r\n                image={thumbnail}\r\n                title={title}\r\n            />\r\n            <CardContent className={classes.content}>\r\n                <Typography component=\"h6\" variant=\"h6\">\r\n                    {title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    {id}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default VideoListItem","import React from 'react'\r\nimport VideoListItem from './VideoListItem'\r\nimport {Video} from '../types'\r\n\r\ninterface Props{\r\n    videos: Array<Video>;\r\n    setVideo: (video: Video) => void;\r\n}\r\n\r\nconst VideoList = ({videos, setVideo}: Props) => {\r\n    return (<div style={{height: '100%', overflow: 'auto'}}>\r\n        {videos && videos.map(v => <VideoListItem video={v} key={v.id} setVideo={setVideo}/>)}\r\n        <div style={{height: 200}}/>\r\n        </div>)\r\n}\r\n\r\nexport default VideoList","import React, { useCallback } from 'react'\r\nimport { TextField, AppBar, Toolbar } from '@material-ui/core'\r\n\r\ninterface Props{\r\n    onChange: (evt: any) => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nconst SearchBar = ({ onChange, onSubmit }: Props) => {\r\n    const onKeyPress = useCallback(evt => {\r\n        if (evt.charCode === 13) {\r\n            onSubmit()\r\n            evt.target.blur()\r\n        }\r\n    }, [onSubmit])\r\n    return (\r\n            <AppBar position='static'>\r\n                <Toolbar>\r\n                    <TextField\r\n                    color='secondary'\r\n                    label=\"Search\" variant=\"standard\" onChange={onChange} onKeyPress={onKeyPress} fullWidth />\r\n                </Toolbar>\r\n            </AppBar>)\r\n}\r\n\r\nexport default SearchBar","import {createMuiTheme} from '@material-ui/core'\r\n\r\nexport const URL = 'https://main-youtube-shd6uy5b29ceuriw-gtw.qovery.io'\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#757ce8',\r\n            main: '#50b1de',\r\n            dark: '#002884',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#757ce8',\r\n            main: '#000',\r\n            dark: '#002884',\r\n            contrastText: '#fff',\r\n        }\r\n    }\r\n})","export const zeroPad = (num: number, places: number) => String(num).padStart(places, '0')\r\n\r\nexport const formatTime = (time: number) => {\r\n    return `${zeroPad(Math.floor(time/60), 2)}:${zeroPad(time%60, 2)}`\r\n}","import {URL} from '../constants'\r\nimport {Video, VideoCache, VideoInfo} from '../types'\r\n\r\nclass API {\r\n    private url: string\r\n    private cache: VideoCache\r\n    constructor(url: string) {\r\n        this.url = url\r\n        this.cache = {}\r\n    }\r\n    public async getInfo (videoId: string): Promise<VideoInfo> {\r\n        const cachedInfo = this.cache[videoId]\r\n        if (cachedInfo) {\r\n            return cachedInfo\r\n        }\r\n        const res = await fetch(`${this.url}/info/${videoId}`)\r\n        const data = await res.json()\r\n        data.lengthSeconds = parseInt(data.lengthSeconds)\r\n        this.cache[videoId] = data\r\n        return data\r\n    }\r\n    public getAudio (videoId: string): HTMLAudioElement {\r\n        const src = `${this.url}/stream/${videoId}`\r\n        const audio = new Audio(src)\r\n        return audio\r\n    }\r\n    public async search (searchTerm: string): Promise<Array<Video>> {\r\n        const formatSearchTearm = searchTerm.split(' ').join('+')\r\n        const res = await fetch(`${URL}/search/` + formatSearchTearm)\r\n        const result = await res.json()\r\n        return result\r\n    }\r\n}\r\n\r\nexport const api = new API(URL)","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport 'react-h5-audio-player/lib/styles.css'\r\nimport {URL} from '../constants'\r\nimport {Slider, IconButton, Typography, LinearProgress} from '@material-ui/core'\r\nimport {formatTime} from '../utils'\r\nimport {api} from '../services'\r\nimport {VideoDetails} from '../types'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\r\nimport PauseIcon from '@material-ui/icons/Pause'\r\nimport DownloadIcon from '@material-ui/icons/GetApp';\r\n\r\n\r\ninterface Props{\r\n    videoId: string;\r\n}\r\n\r\nconst Player = ({videoId}: Props) => {\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [playing, setPlaying] = useState<boolean>(false)\r\n    const [currentTime, setCurrentTime] = useState<number>(0)\r\n    const [videoDetails, setVideoDetails] = useState<VideoDetails | null>(null)\r\n    const audioRef = useRef<HTMLAudioElement | null>(null)\r\n    const fetchAudio = useCallback(async () => {\r\n        if (videoId) {\r\n            setLoading(true)\r\n            if (audioRef.current) {\r\n                audioRef.current.pause()\r\n                audioRef.current.currentTime = 0\r\n            }\r\n            const audio = api.getAudio(videoId)\r\n            audio.addEventListener('timeupdate', () => {\r\n                setCurrentTime(Math.round(audio.currentTime))\r\n            })\r\n            audio.addEventListener('ended', () => {\r\n                setPlaying(false)\r\n            })\r\n            audioRef.current = audio\r\n            const info = await api.getInfo(videoId)\r\n            setPlaying(false)\r\n            setVideoDetails(info.videoDetails)\r\n            setLoading(false)\r\n        }\r\n    }, [videoId])\r\n    useEffect(() => {\r\n        fetchAudio()\r\n    }, [fetchAudio])\r\n    const download = useCallback(() => {\r\n        const a = document.createElement('a')\r\n        a.href = `${URL}/download/${videoId}`\r\n        a.target = '_blank'\r\n        a.click()\r\n    }, [videoId])\r\n    const playOrPause = useCallback(() => {\r\n        if (audioRef.current) {\r\n            if (playing) {\r\n                audioRef.current.pause()\r\n            } else {\r\n                audioRef.current.play()\r\n            }\r\n            setPlaying(!playing)\r\n        }\r\n    }, [playing])\r\n    \r\n    \r\n    const onSliderChange = useCallback((_, val) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.currentTime = val\r\n        }\r\n    }, [])\r\n    return (\r\n        <div style={{position: 'fixed', bottom: 0, width: '100%'}}>\r\n        {loading ? <LinearProgress/> : (videoDetails &&\r\n            <div style={{width: '100%', background: '#fff', color: '#000', display: 'flex', flexDirection: 'column', boxShadow: '0px 0px 4px rgba(0,0,0,0.5)'}}>\r\n                <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                    <span style={{margin: 5, marginRight: 15}}>{formatTime(currentTime)}</span>\r\n                    <Slider onChange={onSliderChange} max={videoDetails.lengthSeconds} min={0} value={currentTime}/>\r\n                    <span style={{margin: 5, marginLeft: 15}}>{formatTime(videoDetails.lengthSeconds)}</span>\r\n                </div>\r\n                <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                    <IconButton onClick={playOrPause}>\r\n                        {playing ? <PauseIcon/> : <PlayArrowIcon/>}\r\n                    </IconButton>\r\n                    <IconButton onClick={download}>\r\n                        <DownloadIcon/>\r\n                    </IconButton>\r\n                    <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', marginLeft: 5, overflow: \"hidden\", textOverflow: \"ellipsis\"}}>\r\n                    <Typography variant=\"subtitle1\" noWrap>{videoDetails.title}</Typography>\r\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\" noWrap>{videoDetails.author}</Typography>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player","import './App.css';\r\nimport {useState, useCallback} from 'react'\r\nimport VideoList from './components/VideoList'\r\nimport SearchBar from './components/SearchBar'\r\nimport Player from './components/Player'\r\nimport {theme} from './constants'\r\nimport {api} from './services'\r\nimport {LinearProgress, ThemeProvider} from '@material-ui/core'\r\nimport { Video } from './types';\r\n\r\nfunction App() {\r\n  const [videos, setVideos] = useState<Array<Video>>([])\r\n  const [videoId, setVideoId] = useState<string>('')\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [searchTerm, setSearchTerm] = useState<string>('')\r\n\r\n  const onSearchTermChange = useCallback((evt) => {\r\n    const txt = evt.target.value\r\n    setSearchTerm(txt)\r\n  }, [])\r\n\r\n  const onSearch = useCallback(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const result = await api.search(searchTerm)\r\n        setVideos(result)\r\n        setLoading(false)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [searchTerm])\r\n\r\n  const setVideo = useCallback((video: Video) => {\r\n    setVideoId(video.id)\r\n  }, [])\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <div style={{height: '100vh', overflow: 'hidden'}}>\r\n    <SearchBar onChange={onSearchTermChange} onSubmit={onSearch}/>\r\n    {loading ? <LinearProgress /> : <VideoList videos={videos} setVideo={setVideo}/>}\r\n    <Player videoId={videoId}/>\r\n    </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}