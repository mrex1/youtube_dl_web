{"version":3,"sources":["components/VideoListItem.tsx","components/VideoList.tsx","components/SearchBar.tsx","constants/index.ts","utils/index.ts","services/index.ts","components/Player.tsx","components/PlaylistItem.tsx","components/PlaylistRenderer.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["VideoListItem","video","setVideo","title","videoId","thumbnail","thumbnailUrl","onVidClick","useCallback","className","src","alt","loading","IconButton","onClick","color","VideoList","videos","spaceBottom","style","height","overflow","map","v","SearchBar","onChange","onSubmit","useState","input","setInput","inputMode","setInputMode","onKeyPress","evt","charCode","target","blur","handleInputChange","value","handleClear","handleBack","handleSearch","AppBar","position","Toolbar","edge","Input","placeholder","fullWidth","endAdornment","InputAdornment","aria-label","Typography","flex","URL","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","zeroPad","num","places","String","padStart","formatTime","time","Math","floor","api","url","cache","this","cachedInfo","fetch","res","json","data","videoDetails","lengthSeconds","parseInt","thumbnails","related_videos","id","author","name","length_seconds","Audio","searchTerm","formatSearchTearm","split","join","result","finalResult","playlist","videoIds","videoInfos","current","add","bind","next","a","push","getInfo","info","vid","newCur","indexOf","length","playlistVideos","Player","onVideoEnd","onVideoStart","autoplay","setAutoplay","playing","setPlaying","curVId","setCurVId","currentTime","setCurrentTime","audioRef","useRef","fetchAudio","pause","audio","getAudio","addEventListener","round","play","useEffect","download","document","createElement","href","click","playOrPause","onSliderChange","_","val","handleAutoplayBtn","width","background","display","flexDirection","boxShadow","alignItems","margin","marginRight","Slider","max","min","marginLeft","Tooltip","justifyContent","textOverflow","variant","noWrap","PlaylistItem","clsx","PlaylistRenderer","currentIndex","playVideo","onAdd","on","setOn","toggleExpand","open","LinearProgress","hide","component","App","setVideos","end","setEnd","setLoading","setPlaylistVideos","setCurrent","setSearchTerm","onSearchTermChange","txt","onSearch","search","console","log","fetchData","then","setCurByVid","undefined","suggest","updateCurrent","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9eb287f5.chunk.js","sourcesContent":["import React, { useCallback } from 'react'\r\nimport {Video} from '../types'\r\nimport {IconButton} from '@material-ui/core'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport './VideoListItem.css'\r\n\r\ninterface Props {\r\n    video: Video;\r\n    setVideo: (videoId: string) => void;\r\n}\r\n\r\nconst VideoListItem = ({ video, setVideo }: Props) => {\r\n    const { title, videoId } = video\r\n    const thumbnail = video.thumbnailUrl\r\n    const onVidClick = useCallback(() => {\r\n        setVideo(video.videoId)\r\n    }, [video, setVideo])\r\n    return (\r\n        <div className='video-list-item-container'>\r\n            <img\r\n                src={thumbnail}\r\n                alt='thumbnail'\r\n                loading='lazy'\r\n            />\r\n            <div className='content'>\r\n            <div className='title'>\r\n                {title}\r\n            </div>\r\n            <div className=\"subtitle\">\r\n                {videoId}\r\n            </div>\r\n            </div>\r\n            <IconButton onClick={onVidClick} color='secondary'>\r\n                <AddCircleOutlineIcon/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoListItem","import React from 'react'\r\nimport VideoListItem from './VideoListItem'\r\nimport {Video} from '../types'\r\n\r\ninterface Props{\r\n    videos: Array<Video>;\r\n    setVideo: (video: string) => void;\r\n    className?: string;\r\n    spaceBottom?: boolean;\r\n}\r\n\r\nconst VideoList = ({videos, setVideo, className, spaceBottom}: Props) => {\r\n    return (<div className={className} style={{height: '100%', overflow: 'auto'}}>\r\n        {videos && videos.map(v => <VideoListItem video={v} key={v.videoId} setVideo={setVideo}/>)}\r\n        {spaceBottom && <div style={{height: 150}}/>}\r\n        </div>)\r\n}\r\n\r\nexport default VideoList","import React, { useCallback, useState } from 'react'\r\nimport { Input, AppBar, Toolbar, InputAdornment, IconButton, Typography } from '@material-ui/core'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport './SearchBar.css'\r\n\r\ninterface Props{\r\n    onChange: (evt: any) => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nconst SearchBar = ({ onChange, onSubmit }: Props) => {\r\n    const [input, setInput] = useState<string>('')\r\n    const [inputMode, setInputMode] = useState<boolean>(false)\r\n\r\n    const onKeyPress = useCallback(evt => {\r\n        if (evt.charCode === 13) {\r\n            onSubmit()\r\n            evt.target.blur()\r\n        }\r\n    }, [onSubmit])\r\n\r\n    const handleInputChange = useCallback(evt => {\r\n        setInput(evt.target.value)\r\n        onChange(evt)\r\n    }, [onChange])\r\n\r\n    const handleClear = useCallback(() => {\r\n        setInput('')\r\n    }, [])\r\n\r\n    const handleBack = useCallback(() => {\r\n        setInputMode(false)\r\n    }, [])\r\n\r\n    const handleSearch = useCallback(() => {\r\n        setInputMode(true)\r\n    }, [])\r\n    return (\r\n            <AppBar position='static'>\r\n                {inputMode ?\r\n                <Toolbar>\r\n                    <IconButton color='secondary' edge=\"start\" onClick={handleBack}>\r\n                        <ArrowBackIosIcon/>\r\n                    </IconButton>\r\n                    <Input\r\n                        color='secondary'\r\n                        style={{color: 'white'}}\r\n                        placeholder=\"Search\"\r\n                        value={input}\r\n                        onChange={handleInputChange}\r\n                        onKeyPress={onKeyPress}\r\n                        fullWidth\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                aria-label=\"clear input\"\r\n                                color='secondary'\r\n                                onClick={handleClear}>\r\n                                    <ClearIcon/>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }/>\r\n                </Toolbar> : \r\n                <Toolbar>\r\n                    <Typography style={{flex: 1}}>ListenTube</Typography>\r\n                    <IconButton color='secondary' onClick={handleSearch}>\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                </Toolbar>}\r\n            </AppBar>)\r\n}\r\n\r\nexport default SearchBar","import {createMuiTheme} from '@material-ui/core'\r\n\r\nexport const URL = 'https://main-youtube-shd6uy5b29ceuriw-gtw.qovery.io'\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#303030',\r\n            main: '#000',\r\n            dark: '#303030',\r\n            contrastText: '#ffa600',\r\n        },\r\n        secondary: {\r\n            light: '#fff',\r\n            main: '#ffa600',\r\n            dark: '#fff',\r\n            contrastText: '#fff',\r\n        }\r\n    }\r\n})","export const zeroPad = (num: number, places: number) => String(num).padStart(places, '0')\r\n\r\nexport const formatTime = (time: number) => {\r\n    return `${zeroPad(Math.floor(time/60), 2)}:${zeroPad(time%60, 2)}`\r\n}","import {URL} from '../constants'\r\nimport {Video, VideoCache, VideoDetails, VideoInfo} from '../types'\r\n\r\nclass API {\r\n    private url: string\r\n    private cache: VideoCache\r\n    constructor(url: string) {\r\n        this.url = url\r\n        this.cache = {}\r\n    }\r\n    public async getInfo (videoId: string): Promise<VideoInfo> {\r\n        const cachedInfo = this.cache[videoId]\r\n        if (cachedInfo) {\r\n            return cachedInfo\r\n        }\r\n        const res = await fetch(`${this.url}/info/${videoId}`)\r\n        const data = await res.json()\r\n        data.videoDetails.lengthSeconds = parseInt(data.videoDetails.lengthSeconds)\r\n        data.videoDetails.thumbnailUrl = data.videoDetails.thumbnail.thumbnails[0].url\r\n        this.cache[videoId] = data\r\n        data.related_videos = data.related_videos.map((v: any): VideoDetails => {\r\n            const videoId = v.id\r\n            const thumbnailUrl = v.thumbnails[0].url\r\n            const title = v.title\r\n            const author = v.author.name\r\n            const lengthSeconds = v.length_seconds\r\n            return {videoId, thumbnailUrl, title, author, lengthSeconds}\r\n        })\r\n        return data\r\n    }\r\n    public getAudio (videoId: string): HTMLAudioElement {\r\n        const src = `${this.url}/stream/${videoId}`\r\n        const audio = new Audio(src)\r\n        return audio\r\n    }\r\n    public async search (searchTerm: string): Promise<Array<Video>> {\r\n        const formatSearchTearm = searchTerm.split(' ').join('+')\r\n        const res = await fetch(`${URL}/search/` + formatSearchTearm)\r\n        const result = await res.json()\r\n        const finalResult = result.map((v: any) => {\r\n            v.videoId = v.id\r\n            v.thumbnailUrl = v.thumbnail.url\r\n            return v\r\n        })\r\n        return finalResult\r\n    }\r\n}\r\n\r\nexport const api = new API(URL)\r\n\r\nexport class Playlist {\r\n    private videoIds: Array<string>;\r\n    private videoInfos: VideoCache;\r\n    public current: number;\r\n    private api: API;\r\n    constructor(api: API, videoIds?: Array<string>) {\r\n        this.videoIds = videoIds ? videoIds : []\r\n        this.current = -1\r\n        this.videoInfos = {}\r\n        this.api = api\r\n        this.add = this.add.bind(this)\r\n        this.next = this.next.bind(this)\r\n    }\r\n    async add(videoId: string) {\r\n        if (videoId in this.videoInfos) {\r\n            return\r\n        }\r\n        this.videoIds.push(videoId)\r\n        const info = await this.api.getInfo(videoId)\r\n        this.videoInfos[videoId] = info\r\n    }\r\n    get playlistVideos(): Array<VideoInfo> {\r\n        return this.videoIds.map(id => this.videoInfos[id])\r\n    }\r\n    setCurByVid(vid: string): number | void {\r\n        const newCur = this.videoIds.indexOf(vid)\r\n        if (newCur !== -1) {\r\n            this.current = newCur\r\n            return this.current\r\n        }\r\n    }\r\n    next(): number | void {\r\n        if (this.current < this.videoIds.length - 1) {\r\n            this.current += 1\r\n            return this.current\r\n        }\r\n    }\r\n    suggest(): string | void {\r\n        if (this.current === -1 || this.current >= this.videoIds.length) {\r\n            return\r\n        }\r\n        for (let v of this.playlistVideos[this.current].related_videos) {\r\n            if (this.videoIds.indexOf(v.videoId) === -1) {\r\n                return v.videoId\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const playlist = new Playlist(api)","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport 'react-h5-audio-player/lib/styles.css'\r\nimport {URL} from '../constants'\r\nimport {Slider, IconButton, Typography, Tooltip} from '@material-ui/core'\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled'\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled'\r\nimport {formatTime} from '../utils'\r\nimport {api} from '../services'\r\nimport {VideoDetails} from '../types'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\r\nimport PauseIcon from '@material-ui/icons/Pause'\r\nimport DownloadIcon from '@material-ui/icons/GetApp';\r\n\r\n\r\ninterface Props{\r\n    videoDetails: VideoDetails;\r\n    onVideoEnd?: () => void;\r\n    onVideoStart?: () => void;\r\n    autoplay: boolean;\r\n    setAutoplay: (on: boolean) => void;\r\n}\r\n\r\nconst Player = ({videoDetails, onVideoEnd, onVideoStart, autoplay, setAutoplay}: Props) => {\r\n    const [playing, setPlaying] = useState<boolean>(false)\r\n    const [curVId, setCurVId] = useState<string | null>(null)\r\n    const [currentTime, setCurrentTime] = useState<number>(0)\r\n    const audioRef = useRef<HTMLAudioElement | null>(null)\r\n    const fetchAudio = useCallback(() => {\r\n            if (curVId === videoDetails.videoId) {\r\n                return\r\n            }\r\n            setCurVId(videoDetails.videoId)\r\n            if (audioRef.current) {\r\n                audioRef.current.pause()\r\n                audioRef.current.currentTime = 0\r\n            }\r\n            const audio = api.getAudio(videoDetails.videoId)\r\n            audio.addEventListener('timeupdate', () => {\r\n                setCurrentTime(Math.round(audio.currentTime))\r\n            })\r\n            audio.addEventListener('ended', () => {\r\n                setPlaying(false)\r\n                if (onVideoEnd) {\r\n                    onVideoEnd()\r\n                }\r\n            })\r\n            audio.addEventListener('pause', () => {\r\n                setPlaying(false)\r\n            })\r\n            audio.addEventListener('play', () => {\r\n                setPlaying(true)\r\n                if (onVideoStart) {\r\n                    onVideoStart()\r\n                }\r\n            })\r\n            audioRef.current = audio\r\n            if (autoplay) {\r\n                audio.play()\r\n            }\r\n    }, [videoDetails, onVideoEnd, onVideoStart, autoplay, curVId])\r\n    useEffect(() => {\r\n        fetchAudio()\r\n    }, [fetchAudio])\r\n    const download = useCallback(() => {\r\n        const a = document.createElement('a')\r\n        a.href = `${URL}/download/${videoDetails.videoId}`\r\n        a.target = '_blank'\r\n        a.click()\r\n    }, [videoDetails])\r\n    const playOrPause = useCallback(() => {\r\n        if (audioRef.current) {\r\n            if (playing) {\r\n                audioRef.current.pause()\r\n            } else {\r\n                audioRef.current.play()\r\n            }\r\n        }\r\n    }, [playing])\r\n    \r\n    \r\n    const onSliderChange = useCallback((_, val) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.currentTime = val\r\n        }\r\n    }, [])\r\n\r\n    const handleAutoplayBtn = useCallback(() => {\r\n        setAutoplay(!autoplay)\r\n    }, [autoplay, setAutoplay])\r\n    return (\r\n        <div style={{width: '100%', background: '#000', color: '#fff', display: 'flex', flexDirection: 'column', boxShadow: '0px 0px 4px rgba(0,0,0,0.5)'}}>\r\n            <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                <span style={{margin: 5, marginRight: 15}}>{formatTime(currentTime)}</span>\r\n                <Slider color='secondary' onChange={onSliderChange} max={videoDetails.lengthSeconds} min={0} value={currentTime}/>\r\n                <span style={{margin: 5, marginLeft: 15}}>{formatTime(videoDetails.lengthSeconds)}</span>\r\n            </div>\r\n            <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                <IconButton onClick={playOrPause} color='secondary'>\r\n                    {playing ? <PauseIcon/> : <PlayArrowIcon/>}\r\n                </IconButton>\r\n                <IconButton onClick={download} color='secondary'>\r\n                    <DownloadIcon/>\r\n                </IconButton>\r\n                <Tooltip title=\"autoplay\">\r\n                    <IconButton onClick={handleAutoplayBtn} color='secondary'>\r\n                        {autoplay ? <PauseCircleFilledIcon/> : <PlayCircleFilledIcon/>}\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', marginLeft: 5, overflow: \"hidden\", textOverflow: \"ellipsis\"}}>\r\n                <Typography variant=\"subtitle1\" noWrap>{videoDetails.title}</Typography>\r\n                    <Typography variant=\"subtitle2\" style={{color: 'silver'}} noWrap>{videoDetails.author}</Typography>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player","import React, { useCallback } from 'react'\r\nimport {VideoDetails} from '../types'\r\nimport {IconButton} from '@material-ui/core'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline'\r\nimport clsx from 'clsx'\r\nimport './PlaylistItem.css'\r\n\r\ninterface Props {\r\n    video: VideoDetails;\r\n    playing?: boolean;\r\n    setVideo: (videoId: string) => void;\r\n}\r\n\r\nconst PlaylistItem = ({ video, setVideo, playing }: Props) => {\r\n    const { title, author, thumbnailUrl } = video\r\n    const onVidClick = useCallback(() => {\r\n        setVideo(video.videoId)\r\n    }, [video, setVideo])\r\n    return (\r\n        <div className={clsx('play-list-item-container', {playing})}>\r\n            <img\r\n                src={thumbnailUrl}\r\n                alt='thumbnail'\r\n                loading='lazy'\r\n            />\r\n            <div className='content'>\r\n            <div className='title'>\r\n                {title}\r\n            </div>\r\n            <div className=\"subtitle\">\r\n                {author}\r\n            </div>\r\n            </div>\r\n            <IconButton className={clsx('icon', {playing})} onClick={onVidClick} color='secondary'>\r\n                <PlayCircleOutlineIcon/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaylistItem","import React, { useState, useCallback } from \"react\"\r\nimport clsx from 'clsx'\r\nimport './PlaylistRenderer.css'\r\nimport {IconButton, LinearProgress, Typography} from '@material-ui/core'\r\nimport Up from '@material-ui/icons/ExpandLess'\r\nimport Down from '@material-ui/icons/ExpandMore'\r\nimport Player from './Player'\r\nimport VideoList from './VideoList'\r\nimport {VideoInfo} from '../types'\r\nimport PlaylistItem from \"./PlaylistItem\"\r\n\r\ninterface Props {\r\n    playlistVideos: Array<VideoInfo>;\r\n    currentIndex: number;\r\n    onVideoEnd?: () => void;\r\n    onVideoStart?: () => void;\r\n    autoplay: boolean;\r\n    setAutoplay: (on: boolean) => void;\r\n    playVideo: (id: number) => void;\r\n    onAdd: (videoId: string) => void;\r\n}\r\n\r\nconst PlaylistRenderer = ({playlistVideos, currentIndex, onVideoEnd, onVideoStart, playVideo, onAdd, autoplay, setAutoplay}: Props) => {\r\n    const [on, setOn] = useState<boolean>(false)\r\n\r\n    const toggleExpand = useCallback(() => {\r\n        setOn(!on)\r\n    }, [on])\r\n\r\n    return (\r\n        currentIndex !== -1 ?\r\n        <div className={clsx('playlist', {open: on})}>\r\n            <div className='top-section'>\r\n                <div className='player-container'>\r\n                {currentIndex >= playlistVideos.length?\r\n                    <LinearProgress/> :\r\n                    <Player autoplay={autoplay} setAutoplay={setAutoplay} videoDetails={playlistVideos[currentIndex].videoDetails} onVideoEnd={onVideoEnd} onVideoStart={onVideoStart}/>}\r\n                </div>\r\n                <IconButton onClick={toggleExpand} color='secondary'>\r\n                    {on ? <Down/> : <Up/>}\r\n                </IconButton>\r\n            </div>\r\n            <div className='lists-container'>\r\n            <div className={clsx({hide: !on}, 'list')}>\r\n                {playlistVideos\r\n                    .map((info, id) =>\r\n                        <PlaylistItem key={`playlist${id}`} video={info.videoDetails} setVideo={() => playVideo(id)} playing={id === currentIndex}/>)}\r\n            </div>\r\n            <Typography className={clsx({hide: !on}, 'divider')} variant='h5' component='h5'>Suggested</Typography>\r\n            {currentIndex < playlistVideos.length &&\r\n                <VideoList className={clsx({hide: !on}, 'list')} videos={playlistVideos[currentIndex].related_videos} setVideo={onAdd}/>}\r\n            </div>\r\n        </div> : null\r\n    )\r\n}\r\n\r\nexport default PlaylistRenderer","import './App.css';\r\nimport { useState, useCallback } from 'react'\r\nimport VideoList from './components/VideoList'\r\nimport SearchBar from './components/SearchBar'\r\nimport PlaylistRenderer from './components/PlaylistRenderer'\r\nimport { theme } from './constants'\r\nimport { api, playlist } from './services'\r\nimport { LinearProgress, ThemeProvider } from '@material-ui/core'\r\nimport { Video, VideoInfo } from './types';\r\nimport { useEffect } from 'react';\r\n\r\nfunction App() {\r\n\tconst [videos, setVideos] = useState<Array<Video>>([])\r\n\tconst [end, setEnd] = useState<boolean>(true)\r\n\tconst [autoplay, setAutoplay] = useState<boolean>(true)\r\n\tconst [loading, setLoading] = useState<boolean>(false)\r\n\tconst [playlistVideos, setPlaylistVideos] = useState<Array<VideoInfo>>([])\r\n\tconst [current, setCurrent] = useState<number>(-1)\r\n\tconst [searchTerm, setSearchTerm] = useState<string>('')\r\n\r\n\tconst onSearchTermChange = useCallback((evt) => {\r\n\t\tconst txt = evt.target.value\r\n\t\tsetSearchTerm(txt)\r\n\t}, [])\r\n\r\n\tconst onSearch = useCallback(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true)\r\n\t\t\t\tconst result = await api.search(searchTerm)\r\n\t\t\t\tsetVideos(result)\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData()\r\n\t}, [searchTerm])\r\n\r\n\tconst setVideo = useCallback((videoId: string) => {\r\n\t\tplaylist.add(videoId).then(() => setPlaylistVideos(playlist.playlistVideos))\r\n\t\tif (end && autoplay) {\r\n\t\t\tsetEnd(false)\r\n\t\t\tconst next = playlist.setCurByVid(videoId)\r\n\t\t\tif (next !== undefined) {\r\n\t\t\t\tsetCurrent(next)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [end, autoplay])\r\n\r\n\tuseEffect(() => {\r\n\t\t//for autoplaying next video\r\n\t\tif (end && autoplay && playlist.playlistVideos.length > 0) {\r\n\t\t\tconst next = playlist.next()\r\n\t\t\tif (next !== undefined) {\r\n\t\t\t\treturn setCurrent(next)\r\n\t\t\t}\r\n\t\t\tconst suggest = playlist.suggest()\r\n\t\t\tif (suggest) {\r\n\t\t\t\tsetVideo(suggest)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [end, autoplay, setVideo])\r\n\r\n\tconst onVideoEnd = useCallback(() => {\r\n\t\tsetEnd(true)\r\n\t}, [])\r\n\r\n\tconst onVideoStart = useCallback(() => {\r\n\t\tsetEnd(false)\r\n\t}, [])\r\n\r\n\tconst updateCurrent = useCallback((id: number) => {\r\n\t\tplaylist.current = id\r\n\t\tsetCurrent(id)\r\n\t}, [])\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<div className='background' style={{ height: '100vh', overflow: 'hidden' }}>\r\n\t\t\t\t<SearchBar onChange={onSearchTermChange} onSubmit={onSearch} />\r\n\t\t\t\t{loading ? <LinearProgress /> : <VideoList spaceBottom videos={videos} setVideo={setVideo} />}\r\n\t\t\t\t<PlaylistRenderer\r\n\t\t\t\tautoplay={autoplay}\r\n\t\t\t\tsetAutoplay={setAutoplay}\r\n\t\t\t\tplayVideo={updateCurrent} onAdd={setVideo} playlistVideos={playlistVideos} currentIndex={current} onVideoEnd={onVideoEnd} onVideoStart={onVideoStart}/>\r\n\t\t\t</div>\r\n\t\t</ThemeProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}