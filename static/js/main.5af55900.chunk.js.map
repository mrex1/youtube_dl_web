{"version":3,"sources":["utils/index.ts","components/VideoListItem.tsx","components/VideoList.tsx","components/SearchBar.tsx","constants/index.ts","services/index.ts","components/Player.tsx","components/PlaylistItem.tsx","components/PlaylistRenderer.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["zeroPad","num","places","String","padStart","durationToSeconds","duration","numbers","split","result","base","i","length","parseInt","isSuggestVideo","obj","thumbnail","VideoListItem","video","setVideo","title","id","url","bestThumbnail","onVidClick","useCallback","className","src","alt","loading","IconButton","onClick","color","VideoList","videos","spaceBottom","loadVideos","useState","setLoading","onScroll","e","d","currentTarget","scrollHeight","offsetHeight","scrollTop","then","map","v","LinearProgress","style","height","SearchBar","onChange","onSubmit","input","setInput","inputMode","setInputMode","onKeyPress","evt","charCode","target","blur","handleInputChange","value","handleClear","handleBack","handleSearch","AppBar","position","Toolbar","edge","Input","placeholder","fullWidth","endAdornment","InputAdornment","aria-label","Typography","flex","URL","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","api","cache","suggestionsCache","this","videoId","Audio","fetch","res","json","forEach","searchTerm","formatSearchTearm","join","items","type","continuation","method","headers","body","JSON","stringify","window","playlist","videoIds","current","add","bind","next","indexOf","push","getInfo","vid","newCur","a","suggest","suggestion","suggestions","Player","videoDetails","onVideoEnd","onVideoStart","autoplay","setAutoplay","playing","setPlaying","curVId","setCurVId","currentTime","setCurrentTime","audioRef","useRef","fetchAudio","pause","audio","getAudio","addEventListener","paused","Math","ceil","play","useEffect","time","download","document","createElement","href","click","playOrPause","onSliderChange","_","val","handleAutoplayBtn","width","background","display","flexDirection","boxShadow","alignItems","margin","marginRight","floor","Slider","max","min","marginLeft","Tooltip","justifyContent","overflow","textOverflow","variant","noWrap","author","name","PlaylistItem","thumbnailUrl","clsx","PlaylistRenderer","playlistVideos","currentIndex","playVideo","onAdd","on","setOn","setSuggestions","currentVId","setCurrentVId","toggleExpand","getSuggestions","open","info","component","paddingTop","paddingBottom","App","setVideos","end","setEnd","setPlaylistVideos","setContinuation","setCurrent","setSearchTerm","onSearchTermChange","txt","onSearch","search","filter","console","log","fetchData","setCurByVid","undefined","updateCurrent","loadMoreSearchResult","searchContinue","newVideos","concat","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5af55900.chunk.js","sourcesContent":["import {SuggestVideo} from '../types'\r\n\r\nexport const zeroPad = (num: number, places: number) => String(num).padStart(places, '0')\r\n\r\nexport const formatTime = (time: number) => {\r\n    return `${zeroPad(Math.floor(time/60), 2)}:${zeroPad(time%60, 2)}`\r\n}\r\n\r\nexport const durationToSeconds = (duration: string | null): number => {\r\n    if (duration === null) {\r\n        return 0\r\n    }\r\n    const numbers = duration.split(':')\r\n    let result: number = 0\r\n    let base = 1\r\n    for (let i = 0 ; i < numbers.length ; i++) {\r\n        result += parseInt(numbers[numbers.length - 1 - i])*base\r\n        base *= 60\r\n    }\r\n    return result\r\n}\r\n\r\nexport const isSuggestVideo = (obj: any): obj is SuggestVideo => {\r\n    return obj.thumbnail\r\n}","import React, { useCallback } from 'react'\r\nimport {Video} from 'ytsr'\r\nimport {SuggestVideo} from '../types'\r\nimport { isSuggestVideo } from '../utils'\r\nimport {IconButton} from '@material-ui/core'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport './VideoListItem.css'\r\n\r\ninterface Props {\r\n    video: Video | SuggestVideo;\r\n    setVideo: (videoId: string) => void;\r\n}\r\n\r\nconst VideoListItem = ({ video, setVideo }: Props) => {\r\n    const {title, id} = video\r\n    const thumbnail = isSuggestVideo(video) ? video.thumbnail.url : video.bestThumbnail.url\r\n    const onVidClick = useCallback(() => {\r\n        setVideo(video.id)\r\n    }, [video, setVideo])\r\n    return (\r\n        <div className='video-list-item-container'>\r\n            {thumbnail && <img\r\n                src={thumbnail}\r\n                alt='thumbnail'\r\n                loading='lazy'\r\n            />}\r\n            <div className='content'>\r\n            <div className='title'>\r\n                {title}\r\n            </div>\r\n            <div className=\"subtitle\">\r\n                {id}\r\n            </div>\r\n            </div>\r\n            <IconButton onClick={onVidClick} color='secondary'>\r\n                <AddCircleOutlineIcon/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoListItem","import React, { useCallback, useState } from 'react'\r\nimport VideoListItem from './VideoListItem'\r\nimport {Video} from 'ytsr'\r\nimport {SuggestVideo} from '../types'\r\nimport { LinearProgress } from '@material-ui/core'\r\n\r\ninterface Props{\r\n    videos: Array<Video | SuggestVideo>;\r\n    setVideo: (video: string) => void;\r\n    loadVideos?: () => Promise<void>;\r\n    className?: string;\r\n    spaceBottom?: boolean;\r\n}\r\n\r\nconst VideoList = ({videos, setVideo, className, spaceBottom, loadVideos}: Props) => {\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const onScroll: React.UIEventHandler<HTMLDivElement> = useCallback((e) => {\r\n        const d = e.currentTarget\r\n        if (loadVideos && !loading && d.scrollHeight - d.offsetHeight - d.scrollTop < 2) {\r\n            setLoading(true)\r\n            loadVideos().then(() => setLoading(false))\r\n        }\r\n    }, [loadVideos, loading])\r\n    \r\n    return (\r\n    <div \r\n    className={className}\r\n    onScroll={onScroll}>\r\n        {videos.map(v => <VideoListItem video={v} key={v.id} setVideo={setVideo}/>)}\r\n        {loading && <LinearProgress/>}\r\n        {spaceBottom && <div style={{height: 100}}/>}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default VideoList","import React, { useCallback, useState } from 'react'\r\nimport { Input, AppBar, Toolbar, InputAdornment, IconButton, Typography } from '@material-ui/core'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport './SearchBar.css'\r\n\r\ninterface Props{\r\n    onChange: (evt: any) => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nconst SearchBar = ({ onChange, onSubmit }: Props) => {\r\n    const [input, setInput] = useState<string>('')\r\n    const [inputMode, setInputMode] = useState<boolean>(false)\r\n\r\n    const onKeyPress = useCallback(evt => {\r\n        if (evt.charCode === 13) {\r\n            onSubmit()\r\n            evt.target.blur()\r\n        }\r\n    }, [onSubmit])\r\n\r\n    const handleInputChange = useCallback(evt => {\r\n        setInput(evt.target.value)\r\n        onChange(evt)\r\n    }, [onChange])\r\n\r\n    const handleClear = useCallback(() => {\r\n        setInput('')\r\n    }, [])\r\n\r\n    const handleBack = useCallback(() => {\r\n        setInputMode(false)\r\n    }, [])\r\n\r\n    const handleSearch = useCallback(() => {\r\n        setInputMode(true)\r\n    }, [])\r\n    return (\r\n            <AppBar position='static'>\r\n                {inputMode ?\r\n                <Toolbar>\r\n                    <IconButton color='secondary' edge=\"start\" onClick={handleBack}>\r\n                        <ArrowBackIosIcon/>\r\n                    </IconButton>\r\n                    <Input\r\n                        color='secondary'\r\n                        style={{color: 'white'}}\r\n                        placeholder=\"Search\"\r\n                        value={input}\r\n                        onChange={handleInputChange}\r\n                        onKeyPress={onKeyPress}\r\n                        fullWidth\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                aria-label=\"clear input\"\r\n                                color='secondary'\r\n                                onClick={handleClear}>\r\n                                    <ClearIcon/>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }/>\r\n                </Toolbar> : \r\n                <Toolbar>\r\n                    <Typography style={{flex: 1}}>ListenTube</Typography>\r\n                    <IconButton color='secondary' onClick={handleSearch}>\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                </Toolbar>}\r\n            </AppBar>)\r\n}\r\n\r\nexport default SearchBar","import {createMuiTheme} from '@material-ui/core'\r\n\r\nexport const URL = 'https://main-youtube-shd6uy5b29ceuriw-gtw.qovery.io'\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#303030',\r\n            main: '#000',\r\n            dark: '#303030',\r\n            contrastText: '#ffa600',\r\n        },\r\n        secondary: {\r\n            light: '#fff',\r\n            main: '#ffa600',\r\n            dark: '#fff',\r\n            contrastText: '#fff',\r\n        }\r\n    }\r\n})","import { URL } from '../constants'\r\nimport { VideoCache, SuggestVideo, SuggestionsCache } from '../types'\r\nimport { Result as SearchResult, Video, Continuation, ContinueResult } from 'ytsr'\r\n\r\nclass API {\r\n    private url: string\r\n    private cache: VideoCache\r\n    private suggestionsCache: SuggestionsCache\r\n    constructor(url: string) {\r\n        this.url = url\r\n        this.cache = {}\r\n        this.suggestionsCache = {}\r\n    }\r\n    public getInfo(videoId: string): Video | SuggestVideo {\r\n        return this.cache[videoId]\r\n    }\r\n    public getAudio(videoId: string): HTMLAudioElement {\r\n        const src = `${this.url}/stream?vid=${videoId}`\r\n        const audio = new Audio(src)\r\n        return audio\r\n    }\r\n    public async suggest(videoId: string): Promise<Array<SuggestVideo> | null> {\r\n        if (videoId in this.suggestionsCache) {\r\n            return this.suggestionsCache[videoId]\r\n        }\r\n        try {\r\n            const res = await fetch(`${URL}/suggest?vid=${videoId}`)\r\n            const result: SuggestVideo[] = await res.json()\r\n            result.forEach(v => {\r\n                if (!(v.id in this.cache)) {\r\n                    this.cache[v.id] = v\r\n                }\r\n            })\r\n            this.suggestionsCache[videoId] = result\r\n            return result\r\n        } catch (err) {\r\n            return null\r\n        }\r\n    }\r\n    public async search(searchTerm: string): Promise<SearchResult | null> {\r\n        const formatSearchTearm = searchTerm.split(' ').join('+')\r\n        try {\r\n            const res = await fetch(`${URL}/search?q=${formatSearchTearm}`)\r\n            const result: SearchResult = await res.json()\r\n            result.items.forEach(i => {\r\n                if (i.type === 'video') {\r\n                    this.cache[i.id] = i\r\n                }\r\n            })\r\n            return result\r\n        } catch (err) {\r\n            return null\r\n        }\r\n    }\r\n    public async searchContinue(continuation: Continuation): Promise<ContinueResult | null> {\r\n        try {\r\n            const res = await fetch(`${URL}/search`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(continuation)\r\n            })\r\n            const result: SearchResult = await res.json()\r\n            result.items.forEach(i => {\r\n                if (i.type === 'video') {\r\n                    this.cache[i.id] = i\r\n                }\r\n            })\r\n            return result\r\n        } catch (err) {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport const api = new API(URL);\r\n\r\n(window as any).api = api\r\nexport class Playlist {\r\n    private videoIds: Array<string>;\r\n    public current: number;\r\n    private api: API;\r\n    constructor(api: API, videoIds?: Array<string>) {\r\n        this.videoIds = videoIds ? videoIds : []\r\n        this.current = -1\r\n        this.api = api\r\n        this.add = this.add.bind(this)\r\n        this.next = this.next.bind(this)\r\n    }\r\n    add(videoId: string) {\r\n        if (this.videoIds.indexOf(videoId) === -1) {\r\n            this.videoIds.push(videoId)\r\n        }\r\n    }\r\n    get playlistVideos(): Array<Video | SuggestVideo> {\r\n        return this.videoIds.map(id => this.api.getInfo(id))\r\n    }\r\n    setCurByVid(vid: string): number | void {\r\n        const newCur = this.videoIds.indexOf(vid)\r\n        if (newCur !== -1) {\r\n            this.current = newCur\r\n            return this.current\r\n        }\r\n    }\r\n    async next(): Promise<number | void> {\r\n        if (this.current < this.videoIds.length - 1) {\r\n            this.current += 1\r\n            return this.current\r\n        }\r\n        const suggestion = await this.suggest(this.videoIds[this.current])\r\n        if (suggestion) {\r\n            this.add(suggestion)\r\n            return await this.next()\r\n        }\r\n    }\r\n    // return a suggested video id that is not in the playlist\r\n    private async suggest(videoId: string): Promise<string | void> {\r\n        const suggestions = await this.api.suggest(videoId)\r\n        if (suggestions) {\r\n            for (let suggestion of suggestions) {\r\n                if (this.videoIds.indexOf(suggestion.id) === -1) {\r\n                    return suggestion.id\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const playlist = new Playlist(api)","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport {URL} from '../constants'\r\nimport {Slider, IconButton, Typography, Tooltip} from '@material-ui/core'\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled'\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled'\r\nimport {formatTime, durationToSeconds} from '../utils'\r\nimport {api} from '../services'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\r\nimport PauseIcon from '@material-ui/icons/Pause'\r\nimport DownloadIcon from '@material-ui/icons/GetApp'\r\nimport { Video } from 'ytsr'\r\nimport { SuggestVideo } from '../types'\r\n\r\n\r\ninterface Props{\r\n    videoDetails: Video | SuggestVideo;\r\n    onVideoEnd?: () => void;\r\n    onVideoStart?: () => void;\r\n    autoplay: boolean;\r\n    setAutoplay: (on: boolean) => void;\r\n}\r\n\r\nconst Player = ({videoDetails, onVideoEnd, onVideoStart, autoplay, setAutoplay}: Props) => {\r\n    const [playing, setPlaying] = useState<boolean>(false)\r\n    const [curVId, setCurVId] = useState<string | null>(null)\r\n    const [currentTime, setCurrentTime] = useState<number>(0)\r\n    const audioRef = useRef<HTMLAudioElement | null>(null)\r\n    const fetchAudio = useCallback(() => {\r\n            if (curVId === videoDetails.id) {\r\n                return\r\n            }\r\n            setCurVId(videoDetails.id)\r\n            if (audioRef.current) {\r\n                audioRef.current.pause()\r\n                setCurrentTime(0)\r\n            }\r\n            const audio = api.getAudio(videoDetails.id)\r\n            audio.addEventListener('timeupdate', () => {\r\n                if (audio.paused) return\r\n                setCurrentTime(Math.ceil(audio.currentTime))\r\n            })\r\n            audio.addEventListener('ended', () => {\r\n                setPlaying(false)\r\n                if (onVideoEnd) {\r\n                    onVideoEnd()\r\n                }\r\n            })\r\n            audio.addEventListener('pause', () => {\r\n                setPlaying(false)\r\n            })\r\n            audio.addEventListener('play', () => {\r\n                setPlaying(true)\r\n                if (onVideoStart) {\r\n                    onVideoStart()\r\n                }\r\n            })\r\n            audioRef.current = audio\r\n            if (autoplay) {\r\n                audio.play()\r\n            }\r\n    }, [videoDetails, onVideoEnd, onVideoStart, autoplay, curVId])\r\n    useEffect(() => {\r\n        fetchAudio()\r\n    }, [fetchAudio])\r\n    const download = useCallback(() => {\r\n        const a = document.createElement('a')\r\n        a.href = `${URL}/download?vid=${videoDetails.id}`\r\n        a.target = '_blank'\r\n        a.click()\r\n    }, [videoDetails])\r\n    const playOrPause = useCallback(() => {\r\n        if (audioRef.current) {\r\n            if (playing) {\r\n                audioRef.current.pause()\r\n            } else {\r\n                audioRef.current.play()\r\n            }\r\n        }\r\n    }, [playing])\r\n    \r\n    \r\n    const onSliderChange = useCallback((_, val) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.currentTime = val\r\n        }\r\n    }, [])\r\n\r\n    const handleAutoplayBtn = useCallback(() => {\r\n        setAutoplay(!autoplay)\r\n    }, [autoplay, setAutoplay])\r\n\r\n    return (\r\n        <div style={{width: '100%', background: '#000', color: '#fff', display: 'flex', flexDirection: 'column', boxShadow: '0px 0px 4px rgba(0,0,0,0.5)'}}>\r\n            <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                <span style={{margin: 5, marginRight: 15}}>{formatTime(currentTime)}</span>\r\n                <Slider color='secondary' onChange={onSliderChange} max={durationToSeconds(videoDetails.duration)} min={0} value={currentTime}/>\r\n                <span style={{margin: 5, marginLeft: 15}}>{videoDetails.duration}</span>\r\n            </div>\r\n            <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                <IconButton onClick={playOrPause} color='secondary'>\r\n                    {playing ? <PauseIcon/> : <PlayArrowIcon/>}\r\n                </IconButton>\r\n                <IconButton onClick={download} color='secondary'>\r\n                    <DownloadIcon/>\r\n                </IconButton>\r\n                <Tooltip title=\"autoplay\">\r\n                    <IconButton onClick={handleAutoplayBtn} color='secondary'>\r\n                        {autoplay ? <PauseCircleFilledIcon/> : <PlayCircleFilledIcon/>}\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', marginLeft: 5, overflow: \"hidden\", textOverflow: \"ellipsis\"}}>\r\n                <Typography variant=\"subtitle1\" noWrap>{videoDetails.title}</Typography>\r\n                    <Typography variant=\"subtitle2\" style={{color: 'silver'}} noWrap>{videoDetails.author?.name}</Typography>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player","import React, { useCallback } from 'react'\r\nimport {Video} from 'ytsr'\r\nimport {SuggestVideo} from '../types'\r\nimport { isSuggestVideo } from '../utils'\r\nimport {IconButton} from '@material-ui/core'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline'\r\nimport clsx from 'clsx'\r\nimport './PlaylistItem.css'\r\n\r\ninterface Props {\r\n    video: Video | SuggestVideo;\r\n    playing?: boolean;\r\n    setVideo: (videoId: string) => void;\r\n}\r\n\r\nconst PlaylistItem = ({ video, setVideo, playing }: Props) => {\r\n    const { title, author } = video\r\n    const thumbnailUrl = isSuggestVideo(video) ? video.thumbnail.url : video.bestThumbnail.url\r\n    const onVidClick = useCallback(() => {\r\n        setVideo(video.id)\r\n    }, [video, setVideo])\r\n    return (\r\n        <div className={clsx('play-list-item-container', {playing})}>\r\n            {thumbnailUrl && <img\r\n                src={thumbnailUrl}\r\n                alt='thumbnail'\r\n                loading='lazy'\r\n            />}\r\n            <div className='content'>\r\n            <div className='title'>\r\n                {title}\r\n            </div>\r\n            <div className=\"subtitle\">\r\n                {author?.name}\r\n            </div>\r\n            </div>\r\n            <IconButton className={clsx('icon', {playing})} onClick={onVidClick} color='secondary'>\r\n                <PlayCircleOutlineIcon/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaylistItem","import React, { useState, useCallback, useEffect } from \"react\"\r\nimport clsx from 'clsx'\r\nimport './PlaylistRenderer.css'\r\nimport {IconButton, LinearProgress, Typography} from '@material-ui/core'\r\nimport Up from '@material-ui/icons/ExpandLess'\r\nimport Down from '@material-ui/icons/ExpandMore'\r\nimport Player from './Player'\r\nimport VideoList from './VideoList'\r\nimport {Video} from 'ytsr'\r\nimport PlaylistItem from \"./PlaylistItem\"\r\nimport {SuggestVideo} from '../types'\r\nimport {api} from '../services'\r\n\r\ninterface Props {\r\n    playlistVideos: Array<Video | SuggestVideo>;\r\n    currentIndex: number;\r\n    onVideoEnd?: () => void;\r\n    onVideoStart?: () => void;\r\n    autoplay: boolean;\r\n    setAutoplay: (on: boolean) => void;\r\n    playVideo: (id: number) => void;\r\n    onAdd: (videoId: string) => void;\r\n}\r\n\r\nconst PlaylistRenderer = ({playlistVideos, currentIndex, onVideoEnd, onVideoStart, playVideo, onAdd, autoplay, setAutoplay}: Props) => {\r\n    const [on, setOn] = useState<boolean>(false)\r\n    const [suggestions, setSuggestions] = useState<SuggestVideo[]>([])\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [currentVId, setCurrentVId] = useState<string | null>(null)\r\n\r\n    const toggleExpand = useCallback(() => {\r\n        setOn(!on)\r\n    }, [on])\r\n\r\n    const getSuggestions = useCallback(async (vid: string) => {\r\n        setLoading(true)\r\n        const res = await api.suggest(vid)\r\n        if (res) {\r\n            setSuggestions(res)\r\n        } else {\r\n            setSuggestions([])\r\n        }\r\n        setLoading(false)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (currentVId) {\r\n            getSuggestions(currentVId)\r\n        }\r\n    }, [currentVId, getSuggestions])\r\n\r\n    useEffect(() => {\r\n        setCurrentVId(playlistVideos[currentIndex]?.id)\r\n    }, [currentIndex, playlistVideos])\r\n\r\n    return (\r\n        currentIndex !== -1 ?\r\n        <div className={clsx('playlist', {open: on})}>\r\n            <div className='top-section'>\r\n                <div className='player-container'>\r\n                {currentIndex >= playlistVideos.length?\r\n                    <LinearProgress/> :\r\n                    <Player autoplay={autoplay} setAutoplay={setAutoplay} videoDetails={playlistVideos[currentIndex]} onVideoEnd={onVideoEnd} onVideoStart={onVideoStart}/>}\r\n                </div>\r\n                <IconButton onClick={toggleExpand} color='secondary'>\r\n                    {on ? <Down/> : <Up/>}\r\n                </IconButton>\r\n            </div>\r\n            <div className='lists-container'>\r\n            <div className={clsx('list')}>\r\n                {playlistVideos\r\n                    .map((info, id) =>\r\n                        <PlaylistItem key={`playlist${id}`} video={info} setVideo={() => playVideo(id)} playing={id === currentIndex}/>)}\r\n            </div>\r\n            <Typography className={clsx('divider')} variant='h5' component='h5'>Suggested</Typography>\r\n            {loading ?\r\n                <div style={{paddingTop: 30, paddingBottom: 30}}><LinearProgress/></div> : <VideoList className={clsx('list')} videos={suggestions} setVideo={onAdd}/>\r\n            }\r\n            </div>\r\n        </div> : null\r\n    )\r\n}\r\n\r\nexport default PlaylistRenderer","import './App.css';\r\nimport { useState, useCallback } from 'react'\r\nimport VideoList from './components/VideoList'\r\nimport SearchBar from './components/SearchBar'\r\nimport PlaylistRenderer from './components/PlaylistRenderer'\r\nimport { theme } from './constants'\r\nimport { api, playlist } from './services'\r\nimport { LinearProgress, ThemeProvider } from '@material-ui/core'\r\nimport {Video, Continuation} from 'ytsr'\r\nimport { useEffect } from 'react';\r\nimport { SuggestVideo } from './types';\r\n\r\nfunction App() {\r\n\tconst [videos, setVideos] = useState<Array<Video>>([])\r\n\tconst [end, setEnd] = useState<boolean>(true)\r\n\tconst [autoplay, setAutoplay] = useState<boolean>(true)\r\n\tconst [loading, setLoading] = useState<boolean>(false)\r\n\tconst [playlistVideos, setPlaylistVideos] = useState<Array<Video | SuggestVideo>>([])\r\n\tconst [continuation, setContinuation] = useState<Continuation | null>(null)\r\n\tconst [current, setCurrent] = useState<number>(-1)\r\n\tconst [searchTerm, setSearchTerm] = useState<string>('')\r\n\r\n\tconst onSearchTermChange = useCallback((evt) => {\r\n\t\tconst txt = evt.target.value\r\n\t\tsetSearchTerm(txt)\r\n\t}, [])\r\n\r\n\tconst onSearch = useCallback(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true)\r\n\t\t\t\tconst result = await api.search(searchTerm)\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tsetVideos(result.items.filter(i => i.type === 'video') as Video[])\r\n\t\t\t\t\tsetContinuation(result.continuation)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetVideos([])\r\n\t\t\t\t}\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData()\r\n\t}, [searchTerm])\r\n\r\n\tconst setVideo = useCallback((videoId: string) => {\r\n\t\tplaylist.add(videoId)\r\n\t\tsetPlaylistVideos(playlist.playlistVideos)\r\n\t\tif (end && autoplay) {\r\n\t\t\tsetEnd(false)\r\n\t\t\tconst next = playlist.setCurByVid(videoId)\r\n\t\t\tif (next !== undefined) {\r\n\t\t\t\tsetCurrent(next)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [end, autoplay])\r\n\r\n\tuseEffect(() => {\r\n\t\t//for autoplaying next video\r\n\t\tif (end && autoplay && playlist.playlistVideos.length > 0) {\r\n\t\t\tplaylist.next().then((next) => {\r\n\t\t\t\tif (next !== undefined) {\r\n\t\t\t\t\tsetPlaylistVideos(playlist.playlistVideos)\r\n\t\t\t\t\tsetCurrent(next)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}, [end, autoplay, setVideo])\r\n\r\n\tconst onVideoEnd = useCallback(() => {\r\n\t\tsetEnd(true)\r\n\t}, [])\r\n\r\n\tconst onVideoStart = useCallback(() => {\r\n\t\tsetEnd(false)\r\n\t}, [])\r\n\r\n\tconst updateCurrent = useCallback((id: number) => {\r\n\t\tplaylist.current = id\r\n\t\tsetCurrent(id)\r\n\t}, [])\r\n\r\n\tconst loadMoreSearchResult = useCallback(async () => {\r\n\t\tif (continuation === null) return\r\n\t\tconst result = await api.searchContinue(continuation)\r\n\t\tif (result) {\r\n\t\t\tconst newVideos = result.items.filter(i => i.type === 'video') as Video[]\r\n\t\t\tsetVideos(videos.concat(newVideos))\r\n\t\t\tsetContinuation(result.continuation)\r\n\t\t}\r\n\t}, [continuation, videos])\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<div className='background' style={{ height: '100vh', overflow: 'hidden' }}>\r\n\t\t\t\t<SearchBar onChange={onSearchTermChange} onSubmit={onSearch} />\r\n\t\t\t\t{loading ?\r\n\t\t\t\t\t<LinearProgress /> :\r\n\t\t\t\t\t<VideoList\r\n\t\t\t\t\t\tclassName={'video-list'}\r\n\t\t\t\t\t\tspaceBottom\r\n\t\t\t\t\t\tvideos={videos}\r\n\t\t\t\t\t\tsetVideo={setVideo}\r\n\t\t\t\t\t\tloadVideos={loadMoreSearchResult}/>}\r\n\t\t\t\t<PlaylistRenderer\r\n\t\t\t\tautoplay={autoplay}\r\n\t\t\t\tsetAutoplay={setAutoplay}\r\n\t\t\t\tplayVideo={updateCurrent} onAdd={setVideo} playlistVideos={playlistVideos} currentIndex={current} onVideoEnd={onVideoEnd} onVideoStart={onVideoStart}/>\r\n\t\t\t</div>\r\n\t\t</ThemeProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}